# Makefile.in generated by automake 1.9.6 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/openbox
pkglibdir = $(libdir)/openbox
pkgincludedir = $(includedir)/openbox
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
check_PROGRAMS = render/rendertest$(EXEEXT)
bin_PROGRAMS = openbox/openbox$(EXEEXT) \
	tools/gdm-control/gdm-control$(EXEEXT) \
	tools/gnome-panel-control/gnome-panel-control$(EXEEXT) \
	tools/obxprop/obxprop$(EXEEXT)
DIST_COMMON = README $(am__configure_deps) $(dist_apps_DATA) \
	$(dist_artwizboxed_theme_DATA) $(dist_bear2_theme_DATA) \
	$(dist_clearlooks34_theme_DATA) $(dist_clearlooks_theme_DATA) \
	$(dist_clearlooksolive_theme_DATA) $(dist_doc_DATA) \
	$(dist_docxbm_DATA) $(dist_gnomewmfiles_DATA) \
	$(dist_mikachu_theme_DATA) $(dist_natura_theme_DATA) \
	$(dist_noinst_DATA) $(dist_onyx_theme_DATA) \
	$(dist_onyxcitrus_theme_DATA) $(dist_orang_theme_DATA) \
	$(dist_pixmap_DATA) $(dist_rc_DATA) $(dist_secretbin_SCRIPTS) \
	$(dist_syscrash_theme_DATA) $(pubinclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/version.h.in $(top_srcdir)/configure \
	$(top_srcdir)/parser/obparser-3.0.pc.in \
	$(top_srcdir)/render/obrender-3.0.pc.in ABOUT-NLS AUTHORS \
	COPYING compile config.guess config.rpath config.sub depcomp \
	install-sh ltmain.sh missing
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/openbox.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/x11.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = render/obrender-3.0.pc parser/obparser-3.0.pc \
	version.h
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(secretbindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(appsdir)" \
	"$(DESTDIR)$(artwizboxed_themedir)" \
	"$(DESTDIR)$(bear2_themedir)" \
	"$(DESTDIR)$(clearlooks34_themedir)" \
	"$(DESTDIR)$(clearlooks_themedir)" \
	"$(DESTDIR)$(clearlooksolive_themedir)" "$(DESTDIR)$(docdir)" \
	"$(DESTDIR)$(docxbmdir)" "$(DESTDIR)$(gnomewmfilesdir)" \
	"$(DESTDIR)$(mikachu_themedir)" "$(DESTDIR)$(natura_themedir)" \
	"$(DESTDIR)$(onyx_themedir)" \
	"$(DESTDIR)$(onyxcitrus_themedir)" \
	"$(DESTDIR)$(orang_themedir)" "$(DESTDIR)$(pixmapdir)" \
	"$(DESTDIR)$(rcdir)" "$(DESTDIR)$(syscrash_themedir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(rcdir)" \
	"$(DESTDIR)$(xsessionsdir)" "$(DESTDIR)$(pubincludedir)" \
	"$(DESTDIR)$(pubincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
parser_libobparser_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__dirstamp = $(am__leading_dot)dirstamp
am_parser_libobparser_la_OBJECTS =  \
	parser/parser_libobparser_la-parse.lo
parser_libobparser_la_OBJECTS = $(am_parser_libobparser_la_OBJECTS)
render_libobrender_la_DEPENDENCIES = parser/libobparser.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_render_libobrender_la_OBJECTS =  \
	render/render_libobrender_la-color.lo \
	render/render_libobrender_la-font.lo \
	render/render_libobrender_la-gradient.lo \
	render/render_libobrender_la-image.lo \
	render/render_libobrender_la-imagecache.lo \
	render/render_libobrender_la-instance.lo \
	render/render_libobrender_la-mask.lo \
	render/render_libobrender_la-render.lo \
	render/render_libobrender_la-theme.lo
render_libobrender_la_OBJECTS = $(am_render_libobrender_la_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_openbox_openbox_OBJECTS =  \
	openbox/actions/openbox_openbox-all.$(OBJEXT) \
	openbox/actions/openbox_openbox-addremovedesktop.$(OBJEXT) \
	openbox/actions/openbox_openbox-breakchroot.$(OBJEXT) \
	openbox/actions/openbox_openbox-close.$(OBJEXT) \
	openbox/actions/openbox_openbox-cyclewindows.$(OBJEXT) \
	openbox/actions/openbox_openbox-debug.$(OBJEXT) \
	openbox/actions/openbox_openbox-decorations.$(OBJEXT) \
	openbox/actions/openbox_openbox-desktop.$(OBJEXT) \
	openbox/actions/openbox_openbox-dockautohide.$(OBJEXT) \
	openbox/actions/openbox_openbox-directionalwindows.$(OBJEXT) \
	openbox/actions/openbox_openbox-execute.$(OBJEXT) \
	openbox/actions/openbox_openbox-exit.$(OBJEXT) \
	openbox/actions/openbox_openbox-focus.$(OBJEXT) \
	openbox/actions/openbox_openbox-focustobottom.$(OBJEXT) \
	openbox/actions/openbox_openbox-fullscreen.$(OBJEXT) \
	openbox/actions/openbox_openbox-growtoedge.$(OBJEXT) \
	openbox/actions/openbox_openbox-iconify.$(OBJEXT) \
	openbox/actions/openbox_openbox-kill.$(OBJEXT) \
	openbox/actions/openbox_openbox-layer.$(OBJEXT) \
	openbox/actions/openbox_openbox-lower.$(OBJEXT) \
	openbox/actions/openbox_openbox-maximize.$(OBJEXT) \
	openbox/actions/openbox_openbox-move.$(OBJEXT) \
	openbox/actions/openbox_openbox-moverelative.$(OBJEXT) \
	openbox/actions/openbox_openbox-moveresizeto.$(OBJEXT) \
	openbox/actions/openbox_openbox-movetoedge.$(OBJEXT) \
	openbox/actions/openbox_openbox-omnipresent.$(OBJEXT) \
	openbox/actions/openbox_openbox-raise.$(OBJEXT) \
	openbox/actions/openbox_openbox-raiselower.$(OBJEXT) \
	openbox/actions/openbox_openbox-reconfigure.$(OBJEXT) \
	openbox/actions/openbox_openbox-resize.$(OBJEXT) \
	openbox/actions/openbox_openbox-resizerelative.$(OBJEXT) \
	openbox/actions/openbox_openbox-restart.$(OBJEXT) \
	openbox/actions/openbox_openbox-shade.$(OBJEXT) \
	openbox/actions/openbox_openbox-shadelowerraise.$(OBJEXT) \
	openbox/actions/openbox_openbox-showdesktop.$(OBJEXT) \
	openbox/actions/openbox_openbox-showmenu.$(OBJEXT) \
	openbox/actions/openbox_openbox-unfocus.$(OBJEXT) \
	openbox/openbox_openbox-actions.$(OBJEXT) \
	openbox/openbox_openbox-client.$(OBJEXT) \
	openbox/openbox_openbox-client_list_menu.$(OBJEXT) \
	openbox/openbox_openbox-client_list_combined_menu.$(OBJEXT) \
	openbox/openbox_openbox-client_menu.$(OBJEXT) \
	openbox/openbox_openbox-config.$(OBJEXT) \
	openbox/openbox_openbox-debug.$(OBJEXT) \
	openbox/openbox_openbox-dock.$(OBJEXT) \
	openbox/openbox_openbox-event.$(OBJEXT) \
	openbox/openbox_openbox-extensions.$(OBJEXT) \
	openbox/openbox_openbox-focus.$(OBJEXT) \
	openbox/openbox_openbox-focus_cycle.$(OBJEXT) \
	openbox/openbox_openbox-focus_cycle_indicator.$(OBJEXT) \
	openbox/openbox_openbox-focus_cycle_popup.$(OBJEXT) \
	openbox/openbox_openbox-frame.$(OBJEXT) \
	openbox/openbox_openbox-framerender.$(OBJEXT) \
	openbox/openbox_openbox-grab.$(OBJEXT) \
	openbox/openbox_openbox-group.$(OBJEXT) \
	openbox/openbox_openbox-keyboard.$(OBJEXT) \
	openbox/openbox_openbox-keytree.$(OBJEXT) \
	openbox/openbox_openbox-mainloop.$(OBJEXT) \
	openbox/openbox_openbox-menuframe.$(OBJEXT) \
	openbox/openbox_openbox-menu.$(OBJEXT) \
	openbox/openbox_openbox-modkeys.$(OBJEXT) \
	openbox/openbox_openbox-mouse.$(OBJEXT) \
	openbox/openbox_openbox-moveresize.$(OBJEXT) \
	openbox/openbox_openbox-openbox.$(OBJEXT) \
	openbox/openbox_openbox-ping.$(OBJEXT) \
	openbox/openbox_openbox-place.$(OBJEXT) \
	openbox/openbox_openbox-prompt.$(OBJEXT) \
	openbox/openbox_openbox-popup.$(OBJEXT) \
	openbox/openbox_openbox-prop.$(OBJEXT) \
	openbox/openbox_openbox-resist.$(OBJEXT) \
	openbox/openbox_openbox-screen.$(OBJEXT) \
	openbox/openbox_openbox-session.$(OBJEXT) \
	openbox/openbox_openbox-stacking.$(OBJEXT) \
	openbox/openbox_openbox-startupnotify.$(OBJEXT) \
	openbox/openbox_openbox-translate.$(OBJEXT) \
	openbox/openbox_openbox-window.$(OBJEXT) \
	openbox/openbox_openbox-xerror.$(OBJEXT)
openbox_openbox_OBJECTS = $(am_openbox_openbox_OBJECTS)
openbox_openbox_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	render/libobrender.la parser/libobparser.la
am_render_rendertest_OBJECTS =  \
	render/render_rendertest-test.$(OBJEXT)
render_rendertest_OBJECTS = $(am_render_rendertest_OBJECTS)
render_rendertest_DEPENDENCIES = parser/libobparser.la \
	render/libobrender.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_tools_gdm_control_gdm_control_OBJECTS = tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.$(OBJEXT)
tools_gdm_control_gdm_control_OBJECTS =  \
	$(am_tools_gdm_control_gdm_control_OBJECTS)
tools_gdm_control_gdm_control_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_tools_gnome_panel_control_gnome_panel_control_OBJECTS = tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.$(OBJEXT)
tools_gnome_panel_control_gnome_panel_control_OBJECTS =  \
	$(am_tools_gnome_panel_control_gnome_panel_control_OBJECTS)
tools_gnome_panel_control_gnome_panel_control_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am_tools_obxprop_obxprop_OBJECTS =  \
	tools/obxprop/tools_obxprop_obxprop-obxprop.$(OBJEXT)
tools_obxprop_obxprop_OBJECTS = $(am_tools_obxprop_obxprop_OBJECTS)
tools_obxprop_obxprop_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
dist_secretbinSCRIPT_INSTALL = $(INSTALL_SCRIPT)
nodist_binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(dist_secretbin_SCRIPTS) $(nodist_bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(parser_libobparser_la_SOURCES) \
	$(render_libobrender_la_SOURCES) $(openbox_openbox_SOURCES) \
	$(render_rendertest_SOURCES) \
	$(tools_gdm_control_gdm_control_SOURCES) \
	$(tools_gnome_panel_control_gnome_panel_control_SOURCES) \
	$(tools_obxprop_obxprop_SOURCES)
DIST_SOURCES = $(parser_libobparser_la_SOURCES) \
	$(render_libobrender_la_SOURCES) $(openbox_openbox_SOURCES) \
	$(render_rendertest_SOURCES) \
	$(tools_gdm_control_gdm_control_SOURCES) \
	$(tools_gnome_panel_control_gnome_panel_control_SOURCES) \
	$(tools_obxprop_obxprop_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(nodist_man_MANS)
dist_appsDATA_INSTALL = $(INSTALL_DATA)
dist_artwizboxed_themeDATA_INSTALL = $(INSTALL_DATA)
dist_bear2_themeDATA_INSTALL = $(INSTALL_DATA)
dist_clearlooks34_themeDATA_INSTALL = $(INSTALL_DATA)
dist_clearlooks_themeDATA_INSTALL = $(INSTALL_DATA)
dist_clearlooksolive_themeDATA_INSTALL = $(INSTALL_DATA)
dist_docDATA_INSTALL = $(INSTALL_DATA)
dist_docxbmDATA_INSTALL = $(INSTALL_DATA)
dist_gnomewmfilesDATA_INSTALL = $(INSTALL_DATA)
dist_mikachu_themeDATA_INSTALL = $(INSTALL_DATA)
dist_natura_themeDATA_INSTALL = $(INSTALL_DATA)
dist_onyx_themeDATA_INSTALL = $(INSTALL_DATA)
dist_onyxcitrus_themeDATA_INSTALL = $(INSTALL_DATA)
dist_orang_themeDATA_INSTALL = $(INSTALL_DATA)
dist_pixmapDATA_INSTALL = $(INSTALL_DATA)
dist_rcDATA_INSTALL = $(INSTALL_DATA)
dist_syscrash_themeDATA_INSTALL = $(INSTALL_DATA)
nodist_pkgconfigDATA_INSTALL = $(INSTALL_DATA)
nodist_rcDATA_INSTALL = $(INSTALL_DATA)
nodist_xsessionsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(dist_apps_DATA) $(dist_artwizboxed_theme_DATA) \
	$(dist_bear2_theme_DATA) $(dist_clearlooks34_theme_DATA) \
	$(dist_clearlooks_theme_DATA) \
	$(dist_clearlooksolive_theme_DATA) $(dist_doc_DATA) \
	$(dist_docxbm_DATA) $(dist_gnomewmfiles_DATA) \
	$(dist_mikachu_theme_DATA) $(dist_natura_theme_DATA) \
	$(dist_noinst_DATA) $(dist_onyx_theme_DATA) \
	$(dist_onyxcitrus_theme_DATA) $(dist_orang_theme_DATA) \
	$(dist_pixmap_DATA) $(dist_rc_DATA) \
	$(dist_syscrash_theme_DATA) $(nodist_pkgconfig_DATA) \
	$(nodist_rc_DATA) $(nodist_xsessions_DATA)
nodist_pubincludeHEADERS_INSTALL = $(INSTALL_HEADER)
pubincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(nodist_pubinclude_HEADERS) $(pubinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /root/dev/obwm/openbox-3.4.11.2/missing --run aclocal-1.9
AMDEP_FALSE = 
AMDEP_TRUE = #
AMTAR = ${SHELL} /root/dev/obwm/openbox-3.4.11.2/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /root/dev/obwm/openbox-3.4.11.2/missing --run autoconf
AUTOHEADER = ${SHELL} /root/dev/obwm/openbox-3.4.11.2/missing --run autoheader
AUTOMAKE = ${SHELL} /root/dev/obwm/openbox-3.4.11.2/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -g -O2 -DNDEBUG -DG_DISABLE_ASSERT -fno-strict-aliasing
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"openbox\" -DPACKAGE_TARNAME=\"openbox\" -DPACKAGE_VERSION=\"3.4.11.2\" -DPACKAGE_STRING=\"openbox\ 3.4.11.2\" -DPACKAGE_BUGREPORT=\"http://bugzilla.icculus.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"openbox\" -DVERSION=\"3.4.11.2\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DENABLE_NLS=1 -DHAVE_GETTEXT=1 -DHAVE_DCGETTEXT=1 -DHAVE_CTYPE_H=1 -DHAVE_FCNTL_H=1 -DHAVE_LOCALE_H=1 -DHAVE_SIGNAL_H=1 -DHAVE_STRING_H=1 -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_UNISTD_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_SELECT_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_SYS_WAIT_H=1 -DUSE_LIBSN=1 -DUSE_XCURSOR=1 -DHAVE_LIBX11=1 -DHAVE_X11_SM_SMLIB_H=1 -DUSE_SM=1 -DXKB=1 -DXRANDR=1 -DSHAPE=1 -DXINERAMA=1 -DSYNC=1
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EFENCE_LIBS = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GLIB_LIBS = -lglib-2.0  
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LD = /usr/bin/ld
LDFLAGS = 
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS =  
LIBSN_CFLAGS = -I/usr/include/startup-notification-1.0  
LIBSN_LIBS = -lstartup-notification-1  
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBTOOL_DEPS = ./ltmain.sh
LIPO = 
LN_S = ln -s
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
LT_AGE = 0
LT_CURRENT = 21
LT_CURRENT_MINUS_AGE = 21
LT_RELEASE = 3.4
LT_REVISION = 9
MAKEINFO = ${SHELL} /root/dev/obwm/openbox-3.4.11.2/missing --run makeinfo
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OB_BINARY_AGE = 9
OB_INTERFACE_AGE = 9
OB_MAJOR_VERSION = 3
OB_MICRO_VERSION = 30
OB_MINOR_VERSION = 4
OB_VERSION = 3.4.11.2
OTOOL = 
OTOOL64 = 
PACKAGE = openbox
PACKAGE_BUGREPORT = http://bugzilla.icculus.org
PACKAGE_NAME = openbox
PACKAGE_STRING = openbox 3.4.11.2
PACKAGE_TARNAME = openbox
PACKAGE_URL = 
PACKAGE_VERSION = 3.4.11.2
PANGO_CFLAGS = -pthread -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2  
PANGO_LIBS = -pthread -lpangoxft-1.0 -lpangoft2-1.0 -lXft -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0 -lXrender -lfontconfig -lfreetype -lX11  
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POSUB = po
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SM_CFLAGS = 
SM_LIBS = -lSM -lICE
STRIP = strip
USE_NLS = yes
VERSION = 3.4.11.2
XCURSOR_CFLAGS =  
XCURSOR_LIBS = -lXcursor  
XFT_CFLAGS = -I/usr/include/freetype2  
XFT_LIBS = -lXft -lXrender -lfontconfig -lfreetype -lX11  
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XINERAMA_LIBS = -lXext -lXinerama
XKB_CFLAGS = 
XKB_LIBS = 
XMKMF = 
XML_CFLAGS = -I/usr/include/libxml2  
XML_LIBS = -lxml2  
XRANDR_CFLAGS = 
XRANDR_LIBS = -lXext -lXrender -lXrandr
XSHAPE_CFLAGS = 
XSHAPE_LIBS = -lXext
XSYNC_CFLAGS = 
XSYNC_LIBS = -lXext
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS =  -lSM -lICE  -lX11
X_PRE_LIBS =  -lSM -lICE
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__fastdepCC_FALSE = 
am__fastdepCC_TRUE = #
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = /usr/bin
build = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = i686-pc-linux-gnu
host_alias = i686-pc-linux-gnu
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = /usr/include
infodir = /usr/share/info
install_sh = /root/dev/obwm/openbox-3.4.11.2/install-sh
libdir = /usr/lib
libexecdir = /usr/libexec
localedir = $(datadir)/locale
localstatedir = /var
lt_ECHO = echo
mandir = /usr/share/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
sbindir = /usr/sbin
sharedstatedir = /var/lib
sysconfdir = /etc
target_alias = 
SUBDIRS = m4 po
docxbmdir = $(docdir)/xbm
themedir = $(datadir)/themes
configdir = $(sysconfdir)/xdg
rcdir = $(configdir)/openbox
xsessionsdir = $(datadir)/xsessions
gnomewmfilesdir = $(datadir)/gnome/wm-properties
pkgconfigdir = $(libdir)/pkgconfig
pubincludedir = $(includedir)/openbox/3.4.11.2/openbox
pixmapdir = $(datadir)/pixmaps
xsddir = $(datadir)/openbox
secretbindir = $(datadir)/openbox
appsdir = $(datadir)/applications
theme = Clearlooks
AUTOMAKE_OPTIONS = subdir-objects foreign
ACLOCAL_AMFLAGS = -I m4
INCLUDES = -I.
lib_LTLIBRARIES = \
	parser/libobparser.la \
	render/libobrender.la

dist_secretbin_SCRIPTS = \
	tools/xdg-autostart/xdg-autostart

nodist_bin_SCRIPTS = \
	data/xsession/openbox-session \
	data/xsession/openbox-gnome-session \
	data/xsession/openbox-kde-session

render_rendertest_CPPFLAGS = \
	$(PANGO_CFLAGS) \
	$(XFT_CFLAGS) \
	$(GLIB_CFLAGS) \
	-DG_LOG_DOMAIN=\"RenderTest\"

render_rendertest_LDADD = \
	parser/libobparser.la \
	render/libobrender.la \
	$(GLIB_LIBS) \
	$(PANGO_LIBS) \
	$(XFT_LIBS) \
	$(XML_LIBS) \
	$(X_LIBS)

render_rendertest_SOURCES = render/test.c
render_libobrender_la_CPPFLAGS = \
	$(X_CFLAGS) \
	$(GLIB_CFLAGS) \
	$(XML_CFLAGS) \
	$(PANGO_CFLAGS) \
	$(XFT_CFLAGS) \
	-DG_LOG_DOMAIN=\"ObRender\" \
	-DDEFAULT_THEME=\"$(theme)\"

render_libobrender_la_LDFLAGS = \
	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)

render_libobrender_la_LIBADD = \
	parser/libobparser.la \
	$(X_LIBS) \
	$(PANGO_LIBS) \
	$(XFT_LIBS) \
	$(GLIB_LIBS) \
	$(XML_LIBS)

render_libobrender_la_SOURCES = \
	gettext.h \
	render/color.h \
	render/color.c \
	render/font.h \
	render/font.c \
	render/geom.h \
	render/gradient.h \
	render/gradient.c \
	render/icon.h \
	render/image.h \
	render/image.c \
	render/imagecache.h \
	render/imagecache.c \
	render/instance.h \
	render/instance.c \
	render/mask.h \
	render/mask.c \
	render/render.h \
	render/render.c \
	render/theme.h \
	render/theme.c

parser_libobparser_la_CPPFLAGS = \
	$(GLIB_CFLAGS) \
	$(XML_CFLAGS) \
	-DG_LOG_DOMAIN=\"ObParser\" \
	-DLOCALEDIR=\"$(localedir)\" \
	-DDATADIR=\"$(datadir)\" \
	-DCONFIGDIR=\"$(configdir)\"

parser_libobparser_la_LDFLAGS = \
	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)

parser_libobparser_la_LIBADD = \
	$(GLIB_LIBS) \
	$(XML_LIBS) 

parser_libobparser_la_SOURCES = \
	parser/parse.h \
	parser/parse.c

openbox_openbox_CPPFLAGS = \
	$(SM_CFLAGS) \
	$(XINERAMA_CFLAGS) \
	$(XKB_CFLAGS) \
	$(XRANDR_CFLAGS) \
	$(XSHAPE_CFLAGS) \
	$(XSYNC_CFLAGS) \
	$(X_CFLAGS) \
	$(XCURSOR_CFLAGS) \
	$(SM_CFLAGS) \
	$(PANGO_CFLAGS) \
	$(GLIB_CFLAGS) \
	$(LIBSN_CFLAGS) \
	$(XML_CFLAGS) \
	-DLOCALEDIR=\"$(localedir)\" \
	-DDATADIR=\"$(datadir)\" \
	-DCONFIGDIR=\"$(configdir)\" \
	-DG_LOG_DOMAIN=\"Openbox\"

openbox_openbox_LDADD = \
	$(SM_LIBS) \
	$(XINERAMA_LIBS) \
	$(XKB_LIBS) \
	$(XRANDR_LIBS) \
	$(XSHAPE_LIBS) \
	$(XSYNC_LIBS) \
	$(GLIB_LIBS) \
	$(X_LIBS) \
	$(XCURSOR_LIBS) \
	$(LIBSN_LIBS) \
	$(XML_LIBS) \
	$(EFENCE_LIBS) \
	$(LIBINTL) \
	render/libobrender.la \
	parser/libobparser.la

openbox_openbox_LDFLAGS = -export-dynamic
openbox_openbox_SOURCES = \
	gettext.h \
	openbox/actions/all.c \
	openbox/actions/all.h \
	openbox/actions/addremovedesktop.c \
	openbox/actions/breakchroot.c \
	openbox/actions/close.c \
	openbox/actions/cyclewindows.c \
	openbox/actions/debug.c \
	openbox/actions/decorations.c \
	openbox/actions/desktop.c \
	openbox/actions/dockautohide.c \
	openbox/actions/directionalwindows.c \
	openbox/actions/execute.c \
	openbox/actions/exit.c \
	openbox/actions/focus.c \
	openbox/actions/focustobottom.c \
	openbox/actions/fullscreen.c \
	openbox/actions/growtoedge.c \
	openbox/actions/iconify.c \
	openbox/actions/kill.c \
	openbox/actions/layer.c \
	openbox/actions/lower.c \
	openbox/actions/maximize.c \
	openbox/actions/move.c \
	openbox/actions/moverelative.c \
	openbox/actions/moveresizeto.c \
	openbox/actions/movetoedge.c \
	openbox/actions/omnipresent.c \
	openbox/actions/raise.c \
	openbox/actions/raiselower.c \
	openbox/actions/reconfigure.c \
	openbox/actions/resize.c \
	openbox/actions/resizerelative.c \
	openbox/actions/restart.c \
	openbox/actions/shade.c \
	openbox/actions/shadelowerraise.c \
	openbox/actions/showdesktop.c \
	openbox/actions/showmenu.c \
	openbox/actions/unfocus.c \
	openbox/actions.c \
	openbox/actions.h \
	openbox/client.c \
	openbox/client.h \
	openbox/client_list_menu.c \
	openbox/client_list_menu.h \
	openbox/client_list_combined_menu.c \
	openbox/client_list_combined_menu.h \
	openbox/client_menu.c \
	openbox/client_menu.h \
	openbox/config.c \
	openbox/config.h \
	openbox/debug.c \
	openbox/debug.h \
	openbox/dock.c \
	openbox/dock.h \
	openbox/event.c \
	openbox/event.h \
	openbox/extensions.c \
	openbox/extensions.h \
	openbox/focus.c \
	openbox/focus.h \
	openbox/focus_cycle.c \
	openbox/focus_cycle.h \
	openbox/focus_cycle_indicator.c \
	openbox/focus_cycle_indicator.h \
	openbox/focus_cycle_popup.c \
	openbox/focus_cycle_popup.h \
	openbox/frame.c \
	openbox/frame.h \
	openbox/framerender.c \
	openbox/framerender.h \
	openbox/geom.h \
	openbox/grab.c \
	openbox/grab.h \
	openbox/group.c \
	openbox/group.h \
	openbox/keyboard.c \
	openbox/keyboard.h \
	openbox/keytree.c \
	openbox/keytree.h \
	openbox/mainloop.c \
	openbox/mainloop.h \
	openbox/menuframe.c \
	openbox/menuframe.h \
	openbox/menu.c \
	openbox/menu.h \
	openbox/misc.h \
	openbox/modkeys.c \
	openbox/modkeys.h \
	openbox/mouse.c \
	openbox/mouse.h \
	openbox/moveresize.c \
	openbox/moveresize.h \
	openbox/mwm.h \
	openbox/openbox.c \
	openbox/openbox.h \
	openbox/ping.c \
	openbox/ping.h \
	openbox/place.c \
	openbox/place.h \
	openbox/prompt.c \
	openbox/prompt.h \
	openbox/popup.c \
	openbox/popup.h \
	openbox/prop.c \
	openbox/prop.h \
	openbox/resist.c \
	openbox/resist.h \
	openbox/screen.c \
	openbox/screen.h \
	openbox/session.c \
	openbox/session.h \
	openbox/stacking.c \
	openbox/stacking.h \
	openbox/startupnotify.c \
	openbox/startupnotify.h \
	openbox/translate.c \
	openbox/translate.h \
	openbox/window.c \
	openbox/window.h \
	openbox/xerror.c \
	openbox/xerror.h

tools_gnome_panel_control_gnome_panel_control_CPPFLAGS = \
	$(X_CFLAGS)

tools_gnome_panel_control_gnome_panel_control_LDADD = \
	-lXau \
	$(X_LIBS)

tools_gnome_panel_control_gnome_panel_control_SOURCES = \
	tools/gnome-panel-control/gnome-panel-control.c

tools_obxprop_obxprop_CPPFLAGS = \
	$(GLIB_CFLAGS) \
	$(X_CFLAGS)

tools_obxprop_obxprop_LDADD = \
	$(GLIB_LIBS) \
	$(X_LIBS)

tools_obxprop_obxprop_SOURCES = \
	tools/obxprop/obxprop.c

tools_gdm_control_gdm_control_CPPFLAGS = \
	$(X_CFLAGS) \
	$(GLIB_CFLAGS)

tools_gdm_control_gdm_control_LDADD = \
	-lXau \
	$(X_LIBS) \
	$(GLIB_LIBS)

tools_gdm_control_gdm_control_SOURCES = \
	tools/gdm-control/gdm-control.c

dist_docxbm_DATA = \
        data/xbm/bullet.xbm \
        data/xbm/close.xbm \
        data/xbm/desk_toggled.xbm \
        data/xbm/desk.xbm \
        data/xbm/iconify.xbm \
        data/xbm/max_toggled.xbm \
        data/xbm/max.xbm \
        data/xbm/shade_toggled.xbm \
        data/xbm/shade.xbm

clearlooks_themedir = $(themedir)/Clearlooks/openbox-3
dist_clearlooks_theme_DATA = \
	themes/Clearlooks/openbox-3/themerc

clearlooks34_themedir = $(themedir)/Clearlooks/openbox-3
dist_clearlooks34_theme_DATA = \
	themes/Clearlooks-3.4/openbox-3/themerc

clearlooksolive_themedir = $(themedir)/Clearlooks-Olive/openbox-3
dist_clearlooksolive_theme_DATA = \
	themes/Clearlooks-Olive/openbox-3/themerc

mikachu_themedir = $(themedir)/Mikachu/openbox-3
dist_mikachu_theme_DATA = \
	themes/Mikachu/openbox-3/bullet.xbm \
	themes/Mikachu/openbox-3/close.xbm \
	themes/Mikachu/openbox-3/desk.xbm \
	themes/Mikachu/openbox-3/iconify.xbm \
	themes/Mikachu/openbox-3/max.xbm \
	themes/Mikachu/openbox-3/themerc

natura_themedir = $(themedir)/Natura/openbox-3
dist_natura_theme_DATA = \
	themes/Natura/openbox-3/close_hover.xbm \
	themes/Natura/openbox-3/close.xbm \
	themes/Natura/openbox-3/desk_toggled.xbm \
	themes/Natura/openbox-3/desk_hover.xbm \
	themes/Natura/openbox-3/desk.xbm \
	themes/Natura/openbox-3/iconify_hover.xbm \
	themes/Natura/openbox-3/iconify.xbm \
	themes/Natura/openbox-3/max_hover.xbm \
	themes/Natura/openbox-3/max_toggled.xbm \
	themes/Natura/openbox-3/max.xbm \
	themes/Natura/openbox-3/shade.xbm \
	themes/Natura/openbox-3/shade_hover.xbm \
	themes/Natura/openbox-3/themerc

artwizboxed_themedir = $(themedir)/Artwiz-boxed/openbox-3
dist_artwizboxed_theme_DATA = \
	themes/Artwiz-boxed/openbox-3/themerc

bear2_themedir = $(themedir)/Bear2/openbox-3
dist_bear2_theme_DATA = \
	themes/Bear2/openbox-3/close_pressed.xbm \
	themes/Bear2/openbox-3/close.xbm \
	themes/Bear2/openbox-3/desk_toggled.xbm \
	themes/Bear2/openbox-3/desk.xbm \
	themes/Bear2/openbox-3/iconify_pressed.xbm \
	themes/Bear2/openbox-3/iconify.xbm \
	themes/Bear2/openbox-3/max_pressed.xbm \
	themes/Bear2/openbox-3/max_toggled.xbm \
	themes/Bear2/openbox-3/max.xbm \
	themes/Bear2/openbox-3/shade_pressed.xbm \
	themes/Bear2/openbox-3/shade.xbm \
	themes/Bear2/openbox-3/themerc

orang_themedir = $(themedir)/Orang/openbox-3
dist_orang_theme_DATA = \
	themes/Orang/openbox-3/themerc

onyx_themedir = $(themedir)/Onyx/openbox-3
dist_onyx_theme_DATA = \
	themes/Onyx/openbox-3/themerc

onyxcitrus_themedir = $(themedir)/Onyx-Citrus/openbox-3
dist_onyxcitrus_theme_DATA = \
	themes/Onyx-Citrus/openbox-3/themerc

syscrash_themedir = $(themedir)/Syscrash/openbox-3
dist_syscrash_theme_DATA = \
	themes/Syscrash/openbox-3/max_disabled.xbm \
	themes/Syscrash/openbox-3/max_pressed.xbm \
	themes/Syscrash/openbox-3/max_toggled.xbm \
	themes/Syscrash/openbox-3/max.xbm \
	themes/Syscrash/openbox-3/themerc

pubinclude_HEADERS = \
	render/color.h \
	render/font.h \
	render/geom.h \
	render/gradient.h \
	render/image.h \
	render/instance.h \
	render/mask.h \
	render/render.h \
	render/theme.h \
	parser/parse.h

nodist_pubinclude_HEADERS = \
	version.h

nodist_pkgconfig_DATA = \
	render/obrender-3.0.pc \
	parser/obparser-3.0.pc

dist_apps_DATA = \
	data/openbox.desktop

dist_pixmap_DATA = \
	data/openbox.png

nodist_rc_DATA = \
	data/autostart.sh

dist_rc_DATA = \
	data/rc.xml \
	data/menu.xml

edit = $(SED) \
	-e 's!@version\@!$(VERSION)!' \
	-e 's!@configdir\@!$(configdir)!' \
	-e 's!@secretbindir\@!$(secretbindir)!' \
	-e 's!@libexecdir\@!$(libexecdir)!' \
	-e 's!@bindir\@!$(bindir)!'

dist_gnomewmfiles_DATA = \
	data/gnome-wm-properties/openbox.desktop

nodist_xsessions_DATA = \
	data/xsession/openbox.desktop \
	data/xsession/openbox-gnome.desktop \
	data/xsession/openbox-kde.desktop

dist_noinst_DATA = \
	version.h.in \
	data/autostart.sh.in \
	data/rc.xsd \
	data/menu.xsd \
	data/xsession/openbox.desktop.in \
	data/xsession/openbox-gnome.desktop.in \
	data/xsession/openbox-kde.desktop.in \
	data/xsession/openbox-session.in \
	data/xsession/openbox-gnome-session.in \
	data/xsession/openbox-kde-session.in \
	doc/openbox.1.sgml \
	doc/openbox.1.in \
	doc/openbox-session.1.sgml \
	doc/openbox-session.1.in \
	doc/openbox-gnome-session.1.sgml \
	doc/openbox-gnome-session.1.in \
	doc/openbox-kde-session.1.sgml \
	doc/openbox-kde-session.1.in \
	doc/obxprop.1.sgml \
	doc/obxprop.1.in \
	render/obrender-3.0.pc.in \
	parser/obparser-3.0.pc.in \
	tools/themeupdate/themeupdate.py \
	tests/hideshow.py \
	tests/Makefile \
	tests/aspect.c \
	tests/fullscreen.c \
	tests/grav.c \
	tests/grouptran.c \
	tests/icons.c \
	tests/modal2.c \
	tests/modal3.c \
	tests/modal.c \
	tests/noresize.c \
	tests/override.c \
	tests/positioned.c \
	tests/strut.c \
	tests/title.c \
	tests/urgent.c

dist_doc_DATA = \
	COMPLIANCE \
	README \
	AUTHORS \
	CHANGELOG \
	COPYING \
	data/rc.xsd \
	data/menu.xsd \
	doc/rc-mouse-focus.xml

nodist_man_MANS = \
	doc/openbox.1 \
	doc/openbox-session.1 \
	doc/openbox-gnome-session.1 \
	doc/openbox-kde-session.1 \
	doc/obxprop.1

EXTRA_DIST = \
	config.rpath


# make clean doesn't delete these for some reason, even though they are
# built by make
CLEANFILES = \
	doc/openbox.1 \
	doc/openbox-session.1 \
	doc/openbox-gnome-session.1 \
	doc/openbox-kde-session.1 \
	doc/obxprop.1 \
	data/xsession/openbox-session \
	data/xsession/openbox-gnome-session \
	data/xsession/openbox-kde-session \
	data/xsession/openbox.desktop \
	data/xsession/openbox-gnome.desktop \
	data/xsession/openbox-kde.desktop \
	data/autostart.sh \
	openbox/.libs/openbox

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
render/obrender-3.0.pc: $(top_builddir)/config.status $(top_srcdir)/render/obrender-3.0.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
parser/obparser-3.0.pc: $(top_builddir)/config.status $(top_srcdir)/parser/obparser-3.0.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
version.h: $(top_builddir)/config.status $(srcdir)/version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
parser/$(am__dirstamp):
	@$(mkdir_p) parser
	@: > parser/$(am__dirstamp)
parser/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) parser/$(DEPDIR)
	@: > parser/$(DEPDIR)/$(am__dirstamp)
parser/parser_libobparser_la-parse.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/libobparser.la: $(parser_libobparser_la_OBJECTS) $(parser_libobparser_la_DEPENDENCIES) parser/$(am__dirstamp)
	$(LINK) -rpath $(libdir) $(parser_libobparser_la_LDFLAGS) $(parser_libobparser_la_OBJECTS) $(parser_libobparser_la_LIBADD) $(LIBS)
render/$(am__dirstamp):
	@$(mkdir_p) render
	@: > render/$(am__dirstamp)
render/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) render/$(DEPDIR)
	@: > render/$(DEPDIR)/$(am__dirstamp)
render/render_libobrender_la-color.lo: render/$(am__dirstamp) \
	render/$(DEPDIR)/$(am__dirstamp)
render/render_libobrender_la-font.lo: render/$(am__dirstamp) \
	render/$(DEPDIR)/$(am__dirstamp)
render/render_libobrender_la-gradient.lo: render/$(am__dirstamp) \
	render/$(DEPDIR)/$(am__dirstamp)
render/render_libobrender_la-image.lo: render/$(am__dirstamp) \
	render/$(DEPDIR)/$(am__dirstamp)
render/render_libobrender_la-imagecache.lo: render/$(am__dirstamp) \
	render/$(DEPDIR)/$(am__dirstamp)
render/render_libobrender_la-instance.lo: render/$(am__dirstamp) \
	render/$(DEPDIR)/$(am__dirstamp)
render/render_libobrender_la-mask.lo: render/$(am__dirstamp) \
	render/$(DEPDIR)/$(am__dirstamp)
render/render_libobrender_la-render.lo: render/$(am__dirstamp) \
	render/$(DEPDIR)/$(am__dirstamp)
render/render_libobrender_la-theme.lo: render/$(am__dirstamp) \
	render/$(DEPDIR)/$(am__dirstamp)
render/libobrender.la: $(render_libobrender_la_OBJECTS) $(render_libobrender_la_DEPENDENCIES) render/$(am__dirstamp)
	$(LINK) -rpath $(libdir) $(render_libobrender_la_LDFLAGS) $(render_libobrender_la_OBJECTS) $(render_libobrender_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
openbox/actions/$(am__dirstamp):
	@$(mkdir_p) openbox/actions
	@: > openbox/actions/$(am__dirstamp)
openbox/actions/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) openbox/actions/$(DEPDIR)
	@: > openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-all.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-addremovedesktop.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-breakchroot.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-close.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-cyclewindows.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-debug.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-decorations.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-desktop.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-dockautohide.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-directionalwindows.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-execute.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-exit.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-focus.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-focustobottom.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-fullscreen.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-growtoedge.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-iconify.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-kill.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-layer.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-lower.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-maximize.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-move.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-moverelative.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-moveresizeto.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-movetoedge.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-omnipresent.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-raise.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-raiselower.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-reconfigure.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-resize.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-resizerelative.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-restart.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-shade.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-shadelowerraise.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-showdesktop.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-showmenu.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/actions/openbox_openbox-unfocus.$(OBJEXT):  \
	openbox/actions/$(am__dirstamp) \
	openbox/actions/$(DEPDIR)/$(am__dirstamp)
openbox/$(am__dirstamp):
	@$(mkdir_p) openbox
	@: > openbox/$(am__dirstamp)
openbox/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) openbox/$(DEPDIR)
	@: > openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-actions.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-client.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-client_list_menu.$(OBJEXT):  \
	openbox/$(am__dirstamp) openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-client_list_combined_menu.$(OBJEXT):  \
	openbox/$(am__dirstamp) openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-client_menu.$(OBJEXT):  \
	openbox/$(am__dirstamp) openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-config.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-debug.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-dock.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-event.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-extensions.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-focus.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-focus_cycle.$(OBJEXT):  \
	openbox/$(am__dirstamp) openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-focus_cycle_indicator.$(OBJEXT):  \
	openbox/$(am__dirstamp) openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-focus_cycle_popup.$(OBJEXT):  \
	openbox/$(am__dirstamp) openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-frame.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-framerender.$(OBJEXT):  \
	openbox/$(am__dirstamp) openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-grab.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-group.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-keyboard.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-keytree.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-mainloop.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-menuframe.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-menu.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-modkeys.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-mouse.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-moveresize.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-openbox.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-ping.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-place.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-prompt.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-popup.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-prop.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-resist.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-screen.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-session.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-stacking.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-startupnotify.$(OBJEXT):  \
	openbox/$(am__dirstamp) openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-translate.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-window.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox_openbox-xerror.$(OBJEXT): openbox/$(am__dirstamp) \
	openbox/$(DEPDIR)/$(am__dirstamp)
openbox/openbox$(EXEEXT): $(openbox_openbox_OBJECTS) $(openbox_openbox_DEPENDENCIES) openbox/$(am__dirstamp)
	@rm -f openbox/openbox$(EXEEXT)
	$(LINK) $(openbox_openbox_LDFLAGS) $(openbox_openbox_OBJECTS) $(openbox_openbox_LDADD) $(LIBS)
render/render_rendertest-test.$(OBJEXT): render/$(am__dirstamp) \
	render/$(DEPDIR)/$(am__dirstamp)
render/rendertest$(EXEEXT): $(render_rendertest_OBJECTS) $(render_rendertest_DEPENDENCIES) render/$(am__dirstamp)
	@rm -f render/rendertest$(EXEEXT)
	$(LINK) $(render_rendertest_LDFLAGS) $(render_rendertest_OBJECTS) $(render_rendertest_LDADD) $(LIBS)
tools/gdm-control/$(am__dirstamp):
	@$(mkdir_p) tools/gdm-control
	@: > tools/gdm-control/$(am__dirstamp)
tools/gdm-control/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) tools/gdm-control/$(DEPDIR)
	@: > tools/gdm-control/$(DEPDIR)/$(am__dirstamp)
tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.$(OBJEXT):  \
	tools/gdm-control/$(am__dirstamp) \
	tools/gdm-control/$(DEPDIR)/$(am__dirstamp)
tools/gdm-control/gdm-control$(EXEEXT): $(tools_gdm_control_gdm_control_OBJECTS) $(tools_gdm_control_gdm_control_DEPENDENCIES) tools/gdm-control/$(am__dirstamp)
	@rm -f tools/gdm-control/gdm-control$(EXEEXT)
	$(LINK) $(tools_gdm_control_gdm_control_LDFLAGS) $(tools_gdm_control_gdm_control_OBJECTS) $(tools_gdm_control_gdm_control_LDADD) $(LIBS)
tools/gnome-panel-control/$(am__dirstamp):
	@$(mkdir_p) tools/gnome-panel-control
	@: > tools/gnome-panel-control/$(am__dirstamp)
tools/gnome-panel-control/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) tools/gnome-panel-control/$(DEPDIR)
	@: > tools/gnome-panel-control/$(DEPDIR)/$(am__dirstamp)
tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.$(OBJEXT):  \
	tools/gnome-panel-control/$(am__dirstamp) \
	tools/gnome-panel-control/$(DEPDIR)/$(am__dirstamp)
tools/gnome-panel-control/gnome-panel-control$(EXEEXT): $(tools_gnome_panel_control_gnome_panel_control_OBJECTS) $(tools_gnome_panel_control_gnome_panel_control_DEPENDENCIES) tools/gnome-panel-control/$(am__dirstamp)
	@rm -f tools/gnome-panel-control/gnome-panel-control$(EXEEXT)
	$(LINK) $(tools_gnome_panel_control_gnome_panel_control_LDFLAGS) $(tools_gnome_panel_control_gnome_panel_control_OBJECTS) $(tools_gnome_panel_control_gnome_panel_control_LDADD) $(LIBS)
tools/obxprop/$(am__dirstamp):
	@$(mkdir_p) tools/obxprop
	@: > tools/obxprop/$(am__dirstamp)
tools/obxprop/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) tools/obxprop/$(DEPDIR)
	@: > tools/obxprop/$(DEPDIR)/$(am__dirstamp)
tools/obxprop/tools_obxprop_obxprop-obxprop.$(OBJEXT):  \
	tools/obxprop/$(am__dirstamp) \
	tools/obxprop/$(DEPDIR)/$(am__dirstamp)
tools/obxprop/obxprop$(EXEEXT): $(tools_obxprop_obxprop_OBJECTS) $(tools_obxprop_obxprop_DEPENDENCIES) tools/obxprop/$(am__dirstamp)
	@rm -f tools/obxprop/obxprop$(EXEEXT)
	$(LINK) $(tools_obxprop_obxprop_LDFLAGS) $(tools_obxprop_obxprop_OBJECTS) $(tools_obxprop_obxprop_LDADD) $(LIBS)
install-dist_secretbinSCRIPTS: $(dist_secretbin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(secretbindir)" || $(mkdir_p) "$(DESTDIR)$(secretbindir)"
	@list='$(dist_secretbin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(dist_secretbinSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(secretbindir)/$$f'"; \
	    $(dist_secretbinSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(secretbindir)/$$f"; \
	  else :; fi; \
	done

uninstall-dist_secretbinSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_secretbin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(secretbindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(secretbindir)/$$f"; \
	done
install-nodist_binSCRIPTS: $(nodist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(nodist_bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(nodist_binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(nodist_binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-nodist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-addremovedesktop.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-all.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-breakchroot.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-close.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-cyclewindows.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-debug.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-decorations.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-desktop.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-directionalwindows.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-dockautohide.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-execute.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-exit.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-focus.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-focustobottom.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-fullscreen.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-growtoedge.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-iconify.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-kill.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-layer.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-lower.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-maximize.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-move.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-moverelative.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-moveresizeto.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-movetoedge.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-omnipresent.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-raise.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-raiselower.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-reconfigure.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-resize.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-resizerelative.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-restart.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-shade.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-shadelowerraise.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-showdesktop.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-showmenu.$(OBJEXT)
	-rm -f openbox/actions/openbox_openbox-unfocus.$(OBJEXT)
	-rm -f openbox/openbox_openbox-actions.$(OBJEXT)
	-rm -f openbox/openbox_openbox-client.$(OBJEXT)
	-rm -f openbox/openbox_openbox-client_list_combined_menu.$(OBJEXT)
	-rm -f openbox/openbox_openbox-client_list_menu.$(OBJEXT)
	-rm -f openbox/openbox_openbox-client_menu.$(OBJEXT)
	-rm -f openbox/openbox_openbox-config.$(OBJEXT)
	-rm -f openbox/openbox_openbox-debug.$(OBJEXT)
	-rm -f openbox/openbox_openbox-dock.$(OBJEXT)
	-rm -f openbox/openbox_openbox-event.$(OBJEXT)
	-rm -f openbox/openbox_openbox-extensions.$(OBJEXT)
	-rm -f openbox/openbox_openbox-focus.$(OBJEXT)
	-rm -f openbox/openbox_openbox-focus_cycle.$(OBJEXT)
	-rm -f openbox/openbox_openbox-focus_cycle_indicator.$(OBJEXT)
	-rm -f openbox/openbox_openbox-focus_cycle_popup.$(OBJEXT)
	-rm -f openbox/openbox_openbox-frame.$(OBJEXT)
	-rm -f openbox/openbox_openbox-framerender.$(OBJEXT)
	-rm -f openbox/openbox_openbox-grab.$(OBJEXT)
	-rm -f openbox/openbox_openbox-group.$(OBJEXT)
	-rm -f openbox/openbox_openbox-keyboard.$(OBJEXT)
	-rm -f openbox/openbox_openbox-keytree.$(OBJEXT)
	-rm -f openbox/openbox_openbox-mainloop.$(OBJEXT)
	-rm -f openbox/openbox_openbox-menu.$(OBJEXT)
	-rm -f openbox/openbox_openbox-menuframe.$(OBJEXT)
	-rm -f openbox/openbox_openbox-modkeys.$(OBJEXT)
	-rm -f openbox/openbox_openbox-mouse.$(OBJEXT)
	-rm -f openbox/openbox_openbox-moveresize.$(OBJEXT)
	-rm -f openbox/openbox_openbox-openbox.$(OBJEXT)
	-rm -f openbox/openbox_openbox-ping.$(OBJEXT)
	-rm -f openbox/openbox_openbox-place.$(OBJEXT)
	-rm -f openbox/openbox_openbox-popup.$(OBJEXT)
	-rm -f openbox/openbox_openbox-prompt.$(OBJEXT)
	-rm -f openbox/openbox_openbox-prop.$(OBJEXT)
	-rm -f openbox/openbox_openbox-resist.$(OBJEXT)
	-rm -f openbox/openbox_openbox-screen.$(OBJEXT)
	-rm -f openbox/openbox_openbox-session.$(OBJEXT)
	-rm -f openbox/openbox_openbox-stacking.$(OBJEXT)
	-rm -f openbox/openbox_openbox-startupnotify.$(OBJEXT)
	-rm -f openbox/openbox_openbox-translate.$(OBJEXT)
	-rm -f openbox/openbox_openbox-window.$(OBJEXT)
	-rm -f openbox/openbox_openbox-xerror.$(OBJEXT)
	-rm -f parser/parser_libobparser_la-parse.$(OBJEXT)
	-rm -f parser/parser_libobparser_la-parse.lo
	-rm -f render/render_libobrender_la-color.$(OBJEXT)
	-rm -f render/render_libobrender_la-color.lo
	-rm -f render/render_libobrender_la-font.$(OBJEXT)
	-rm -f render/render_libobrender_la-font.lo
	-rm -f render/render_libobrender_la-gradient.$(OBJEXT)
	-rm -f render/render_libobrender_la-gradient.lo
	-rm -f render/render_libobrender_la-image.$(OBJEXT)
	-rm -f render/render_libobrender_la-image.lo
	-rm -f render/render_libobrender_la-imagecache.$(OBJEXT)
	-rm -f render/render_libobrender_la-imagecache.lo
	-rm -f render/render_libobrender_la-instance.$(OBJEXT)
	-rm -f render/render_libobrender_la-instance.lo
	-rm -f render/render_libobrender_la-mask.$(OBJEXT)
	-rm -f render/render_libobrender_la-mask.lo
	-rm -f render/render_libobrender_la-render.$(OBJEXT)
	-rm -f render/render_libobrender_la-render.lo
	-rm -f render/render_libobrender_la-theme.$(OBJEXT)
	-rm -f render/render_libobrender_la-theme.lo
	-rm -f render/render_rendertest-test.$(OBJEXT)
	-rm -f tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.$(OBJEXT)
	-rm -f tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.$(OBJEXT)
	-rm -f tools/obxprop/tools_obxprop_obxprop-obxprop.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include openbox/$(DEPDIR)/openbox_openbox-actions.Po
#include openbox/$(DEPDIR)/openbox_openbox-client.Po
#include openbox/$(DEPDIR)/openbox_openbox-client_list_combined_menu.Po
#include openbox/$(DEPDIR)/openbox_openbox-client_list_menu.Po
#include openbox/$(DEPDIR)/openbox_openbox-client_menu.Po
#include openbox/$(DEPDIR)/openbox_openbox-config.Po
#include openbox/$(DEPDIR)/openbox_openbox-debug.Po
#include openbox/$(DEPDIR)/openbox_openbox-dock.Po
#include openbox/$(DEPDIR)/openbox_openbox-event.Po
#include openbox/$(DEPDIR)/openbox_openbox-extensions.Po
#include openbox/$(DEPDIR)/openbox_openbox-focus.Po
#include openbox/$(DEPDIR)/openbox_openbox-focus_cycle.Po
#include openbox/$(DEPDIR)/openbox_openbox-focus_cycle_indicator.Po
#include openbox/$(DEPDIR)/openbox_openbox-focus_cycle_popup.Po
#include openbox/$(DEPDIR)/openbox_openbox-frame.Po
#include openbox/$(DEPDIR)/openbox_openbox-framerender.Po
#include openbox/$(DEPDIR)/openbox_openbox-grab.Po
#include openbox/$(DEPDIR)/openbox_openbox-group.Po
#include openbox/$(DEPDIR)/openbox_openbox-keyboard.Po
#include openbox/$(DEPDIR)/openbox_openbox-keytree.Po
#include openbox/$(DEPDIR)/openbox_openbox-mainloop.Po
#include openbox/$(DEPDIR)/openbox_openbox-menu.Po
#include openbox/$(DEPDIR)/openbox_openbox-menuframe.Po
#include openbox/$(DEPDIR)/openbox_openbox-modkeys.Po
#include openbox/$(DEPDIR)/openbox_openbox-mouse.Po
#include openbox/$(DEPDIR)/openbox_openbox-moveresize.Po
#include openbox/$(DEPDIR)/openbox_openbox-openbox.Po
#include openbox/$(DEPDIR)/openbox_openbox-ping.Po
#include openbox/$(DEPDIR)/openbox_openbox-place.Po
#include openbox/$(DEPDIR)/openbox_openbox-popup.Po
#include openbox/$(DEPDIR)/openbox_openbox-prompt.Po
#include openbox/$(DEPDIR)/openbox_openbox-prop.Po
#include openbox/$(DEPDIR)/openbox_openbox-resist.Po
#include openbox/$(DEPDIR)/openbox_openbox-screen.Po
#include openbox/$(DEPDIR)/openbox_openbox-session.Po
#include openbox/$(DEPDIR)/openbox_openbox-stacking.Po
#include openbox/$(DEPDIR)/openbox_openbox-startupnotify.Po
#include openbox/$(DEPDIR)/openbox_openbox-translate.Po
#include openbox/$(DEPDIR)/openbox_openbox-window.Po
#include openbox/$(DEPDIR)/openbox_openbox-xerror.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-addremovedesktop.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-all.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-breakchroot.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-close.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-cyclewindows.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-debug.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-decorations.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-desktop.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-directionalwindows.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-dockautohide.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-execute.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-exit.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-focus.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-focustobottom.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-fullscreen.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-growtoedge.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-iconify.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-kill.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-layer.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-lower.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-maximize.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-move.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-moverelative.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-moveresizeto.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-movetoedge.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-omnipresent.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-raise.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-raiselower.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-reconfigure.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-resize.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-resizerelative.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-restart.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-shade.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-shadelowerraise.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-showdesktop.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-showmenu.Po
#include openbox/actions/$(DEPDIR)/openbox_openbox-unfocus.Po
#include parser/$(DEPDIR)/parser_libobparser_la-parse.Plo
#include render/$(DEPDIR)/render_libobrender_la-color.Plo
#include render/$(DEPDIR)/render_libobrender_la-font.Plo
#include render/$(DEPDIR)/render_libobrender_la-gradient.Plo
#include render/$(DEPDIR)/render_libobrender_la-image.Plo
#include render/$(DEPDIR)/render_libobrender_la-imagecache.Plo
#include render/$(DEPDIR)/render_libobrender_la-instance.Plo
#include render/$(DEPDIR)/render_libobrender_la-mask.Plo
#include render/$(DEPDIR)/render_libobrender_la-render.Plo
#include render/$(DEPDIR)/render_libobrender_la-theme.Plo
#include render/$(DEPDIR)/render_rendertest-test.Po
#include tools/gdm-control/$(DEPDIR)/tools_gdm_control_gdm_control-gdm-control.Po
#include tools/gnome-panel-control/$(DEPDIR)/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.Po
#include tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Po

.c.o:
#	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`; \
#	if $(COMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
#	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c -o $@ $<

.c.obj:
#	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`; \
#	if $(COMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
#	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`; \
#	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
#	then mv -f "$$depbase.Tpo" "$$depbase.Plo"; else rm -f "$$depbase.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LTCOMPILE) -c -o $@ $<

parser/parser_libobparser_la-parse.lo: parser/parse.c
#	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(parser_libobparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parser/parser_libobparser_la-parse.lo -MD -MP -MF "parser/$(DEPDIR)/parser_libobparser_la-parse.Tpo" -c -o parser/parser_libobparser_la-parse.lo `test -f 'parser/parse.c' || echo '$(srcdir)/'`parser/parse.c; \
#	then mv -f "parser/$(DEPDIR)/parser_libobparser_la-parse.Tpo" "parser/$(DEPDIR)/parser_libobparser_la-parse.Plo"; else rm -f "parser/$(DEPDIR)/parser_libobparser_la-parse.Tpo"; exit 1; fi
#	source='parser/parse.c' object='parser/parser_libobparser_la-parse.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(parser_libobparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parser/parser_libobparser_la-parse.lo `test -f 'parser/parse.c' || echo '$(srcdir)/'`parser/parse.c

render/render_libobrender_la-color.lo: render/color.c
#	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT render/render_libobrender_la-color.lo -MD -MP -MF "render/$(DEPDIR)/render_libobrender_la-color.Tpo" -c -o render/render_libobrender_la-color.lo `test -f 'render/color.c' || echo '$(srcdir)/'`render/color.c; \
#	then mv -f "render/$(DEPDIR)/render_libobrender_la-color.Tpo" "render/$(DEPDIR)/render_libobrender_la-color.Plo"; else rm -f "render/$(DEPDIR)/render_libobrender_la-color.Tpo"; exit 1; fi
#	source='render/color.c' object='render/render_libobrender_la-color.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o render/render_libobrender_la-color.lo `test -f 'render/color.c' || echo '$(srcdir)/'`render/color.c

render/render_libobrender_la-font.lo: render/font.c
#	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT render/render_libobrender_la-font.lo -MD -MP -MF "render/$(DEPDIR)/render_libobrender_la-font.Tpo" -c -o render/render_libobrender_la-font.lo `test -f 'render/font.c' || echo '$(srcdir)/'`render/font.c; \
#	then mv -f "render/$(DEPDIR)/render_libobrender_la-font.Tpo" "render/$(DEPDIR)/render_libobrender_la-font.Plo"; else rm -f "render/$(DEPDIR)/render_libobrender_la-font.Tpo"; exit 1; fi
#	source='render/font.c' object='render/render_libobrender_la-font.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o render/render_libobrender_la-font.lo `test -f 'render/font.c' || echo '$(srcdir)/'`render/font.c

render/render_libobrender_la-gradient.lo: render/gradient.c
#	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT render/render_libobrender_la-gradient.lo -MD -MP -MF "render/$(DEPDIR)/render_libobrender_la-gradient.Tpo" -c -o render/render_libobrender_la-gradient.lo `test -f 'render/gradient.c' || echo '$(srcdir)/'`render/gradient.c; \
#	then mv -f "render/$(DEPDIR)/render_libobrender_la-gradient.Tpo" "render/$(DEPDIR)/render_libobrender_la-gradient.Plo"; else rm -f "render/$(DEPDIR)/render_libobrender_la-gradient.Tpo"; exit 1; fi
#	source='render/gradient.c' object='render/render_libobrender_la-gradient.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o render/render_libobrender_la-gradient.lo `test -f 'render/gradient.c' || echo '$(srcdir)/'`render/gradient.c

render/render_libobrender_la-image.lo: render/image.c
#	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT render/render_libobrender_la-image.lo -MD -MP -MF "render/$(DEPDIR)/render_libobrender_la-image.Tpo" -c -o render/render_libobrender_la-image.lo `test -f 'render/image.c' || echo '$(srcdir)/'`render/image.c; \
#	then mv -f "render/$(DEPDIR)/render_libobrender_la-image.Tpo" "render/$(DEPDIR)/render_libobrender_la-image.Plo"; else rm -f "render/$(DEPDIR)/render_libobrender_la-image.Tpo"; exit 1; fi
#	source='render/image.c' object='render/render_libobrender_la-image.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o render/render_libobrender_la-image.lo `test -f 'render/image.c' || echo '$(srcdir)/'`render/image.c

render/render_libobrender_la-imagecache.lo: render/imagecache.c
#	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT render/render_libobrender_la-imagecache.lo -MD -MP -MF "render/$(DEPDIR)/render_libobrender_la-imagecache.Tpo" -c -o render/render_libobrender_la-imagecache.lo `test -f 'render/imagecache.c' || echo '$(srcdir)/'`render/imagecache.c; \
#	then mv -f "render/$(DEPDIR)/render_libobrender_la-imagecache.Tpo" "render/$(DEPDIR)/render_libobrender_la-imagecache.Plo"; else rm -f "render/$(DEPDIR)/render_libobrender_la-imagecache.Tpo"; exit 1; fi
#	source='render/imagecache.c' object='render/render_libobrender_la-imagecache.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o render/render_libobrender_la-imagecache.lo `test -f 'render/imagecache.c' || echo '$(srcdir)/'`render/imagecache.c

render/render_libobrender_la-instance.lo: render/instance.c
#	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT render/render_libobrender_la-instance.lo -MD -MP -MF "render/$(DEPDIR)/render_libobrender_la-instance.Tpo" -c -o render/render_libobrender_la-instance.lo `test -f 'render/instance.c' || echo '$(srcdir)/'`render/instance.c; \
#	then mv -f "render/$(DEPDIR)/render_libobrender_la-instance.Tpo" "render/$(DEPDIR)/render_libobrender_la-instance.Plo"; else rm -f "render/$(DEPDIR)/render_libobrender_la-instance.Tpo"; exit 1; fi
#	source='render/instance.c' object='render/render_libobrender_la-instance.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o render/render_libobrender_la-instance.lo `test -f 'render/instance.c' || echo '$(srcdir)/'`render/instance.c

render/render_libobrender_la-mask.lo: render/mask.c
#	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT render/render_libobrender_la-mask.lo -MD -MP -MF "render/$(DEPDIR)/render_libobrender_la-mask.Tpo" -c -o render/render_libobrender_la-mask.lo `test -f 'render/mask.c' || echo '$(srcdir)/'`render/mask.c; \
#	then mv -f "render/$(DEPDIR)/render_libobrender_la-mask.Tpo" "render/$(DEPDIR)/render_libobrender_la-mask.Plo"; else rm -f "render/$(DEPDIR)/render_libobrender_la-mask.Tpo"; exit 1; fi
#	source='render/mask.c' object='render/render_libobrender_la-mask.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o render/render_libobrender_la-mask.lo `test -f 'render/mask.c' || echo '$(srcdir)/'`render/mask.c

render/render_libobrender_la-render.lo: render/render.c
#	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT render/render_libobrender_la-render.lo -MD -MP -MF "render/$(DEPDIR)/render_libobrender_la-render.Tpo" -c -o render/render_libobrender_la-render.lo `test -f 'render/render.c' || echo '$(srcdir)/'`render/render.c; \
#	then mv -f "render/$(DEPDIR)/render_libobrender_la-render.Tpo" "render/$(DEPDIR)/render_libobrender_la-render.Plo"; else rm -f "render/$(DEPDIR)/render_libobrender_la-render.Tpo"; exit 1; fi
#	source='render/render.c' object='render/render_libobrender_la-render.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o render/render_libobrender_la-render.lo `test -f 'render/render.c' || echo '$(srcdir)/'`render/render.c

render/render_libobrender_la-theme.lo: render/theme.c
#	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT render/render_libobrender_la-theme.lo -MD -MP -MF "render/$(DEPDIR)/render_libobrender_la-theme.Tpo" -c -o render/render_libobrender_la-theme.lo `test -f 'render/theme.c' || echo '$(srcdir)/'`render/theme.c; \
#	then mv -f "render/$(DEPDIR)/render_libobrender_la-theme.Tpo" "render/$(DEPDIR)/render_libobrender_la-theme.Plo"; else rm -f "render/$(DEPDIR)/render_libobrender_la-theme.Tpo"; exit 1; fi
#	source='render/theme.c' object='render/render_libobrender_la-theme.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_libobrender_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o render/render_libobrender_la-theme.lo `test -f 'render/theme.c' || echo '$(srcdir)/'`render/theme.c

openbox/actions/openbox_openbox-all.o: openbox/actions/all.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-all.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-all.Tpo" -c -o openbox/actions/openbox_openbox-all.o `test -f 'openbox/actions/all.c' || echo '$(srcdir)/'`openbox/actions/all.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-all.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-all.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-all.Tpo"; exit 1; fi
#	source='openbox/actions/all.c' object='openbox/actions/openbox_openbox-all.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-all.o `test -f 'openbox/actions/all.c' || echo '$(srcdir)/'`openbox/actions/all.c

openbox/actions/openbox_openbox-all.obj: openbox/actions/all.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-all.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-all.Tpo" -c -o openbox/actions/openbox_openbox-all.obj `if test -f 'openbox/actions/all.c'; then $(CYGPATH_W) 'openbox/actions/all.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/all.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-all.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-all.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-all.Tpo"; exit 1; fi
#	source='openbox/actions/all.c' object='openbox/actions/openbox_openbox-all.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-all.obj `if test -f 'openbox/actions/all.c'; then $(CYGPATH_W) 'openbox/actions/all.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/all.c'; fi`

openbox/actions/openbox_openbox-addremovedesktop.o: openbox/actions/addremovedesktop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-addremovedesktop.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-addremovedesktop.Tpo" -c -o openbox/actions/openbox_openbox-addremovedesktop.o `test -f 'openbox/actions/addremovedesktop.c' || echo '$(srcdir)/'`openbox/actions/addremovedesktop.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-addremovedesktop.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-addremovedesktop.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-addremovedesktop.Tpo"; exit 1; fi
#	source='openbox/actions/addremovedesktop.c' object='openbox/actions/openbox_openbox-addremovedesktop.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-addremovedesktop.o `test -f 'openbox/actions/addremovedesktop.c' || echo '$(srcdir)/'`openbox/actions/addremovedesktop.c

openbox/actions/openbox_openbox-addremovedesktop.obj: openbox/actions/addremovedesktop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-addremovedesktop.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-addremovedesktop.Tpo" -c -o openbox/actions/openbox_openbox-addremovedesktop.obj `if test -f 'openbox/actions/addremovedesktop.c'; then $(CYGPATH_W) 'openbox/actions/addremovedesktop.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/addremovedesktop.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-addremovedesktop.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-addremovedesktop.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-addremovedesktop.Tpo"; exit 1; fi
#	source='openbox/actions/addremovedesktop.c' object='openbox/actions/openbox_openbox-addremovedesktop.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-addremovedesktop.obj `if test -f 'openbox/actions/addremovedesktop.c'; then $(CYGPATH_W) 'openbox/actions/addremovedesktop.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/addremovedesktop.c'; fi`

openbox/actions/openbox_openbox-breakchroot.o: openbox/actions/breakchroot.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-breakchroot.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-breakchroot.Tpo" -c -o openbox/actions/openbox_openbox-breakchroot.o `test -f 'openbox/actions/breakchroot.c' || echo '$(srcdir)/'`openbox/actions/breakchroot.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-breakchroot.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-breakchroot.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-breakchroot.Tpo"; exit 1; fi
#	source='openbox/actions/breakchroot.c' object='openbox/actions/openbox_openbox-breakchroot.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-breakchroot.o `test -f 'openbox/actions/breakchroot.c' || echo '$(srcdir)/'`openbox/actions/breakchroot.c

openbox/actions/openbox_openbox-breakchroot.obj: openbox/actions/breakchroot.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-breakchroot.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-breakchroot.Tpo" -c -o openbox/actions/openbox_openbox-breakchroot.obj `if test -f 'openbox/actions/breakchroot.c'; then $(CYGPATH_W) 'openbox/actions/breakchroot.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/breakchroot.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-breakchroot.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-breakchroot.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-breakchroot.Tpo"; exit 1; fi
#	source='openbox/actions/breakchroot.c' object='openbox/actions/openbox_openbox-breakchroot.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-breakchroot.obj `if test -f 'openbox/actions/breakchroot.c'; then $(CYGPATH_W) 'openbox/actions/breakchroot.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/breakchroot.c'; fi`

openbox/actions/openbox_openbox-close.o: openbox/actions/close.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-close.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-close.Tpo" -c -o openbox/actions/openbox_openbox-close.o `test -f 'openbox/actions/close.c' || echo '$(srcdir)/'`openbox/actions/close.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-close.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-close.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-close.Tpo"; exit 1; fi
#	source='openbox/actions/close.c' object='openbox/actions/openbox_openbox-close.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-close.o `test -f 'openbox/actions/close.c' || echo '$(srcdir)/'`openbox/actions/close.c

openbox/actions/openbox_openbox-close.obj: openbox/actions/close.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-close.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-close.Tpo" -c -o openbox/actions/openbox_openbox-close.obj `if test -f 'openbox/actions/close.c'; then $(CYGPATH_W) 'openbox/actions/close.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/close.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-close.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-close.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-close.Tpo"; exit 1; fi
#	source='openbox/actions/close.c' object='openbox/actions/openbox_openbox-close.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-close.obj `if test -f 'openbox/actions/close.c'; then $(CYGPATH_W) 'openbox/actions/close.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/close.c'; fi`

openbox/actions/openbox_openbox-cyclewindows.o: openbox/actions/cyclewindows.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-cyclewindows.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-cyclewindows.Tpo" -c -o openbox/actions/openbox_openbox-cyclewindows.o `test -f 'openbox/actions/cyclewindows.c' || echo '$(srcdir)/'`openbox/actions/cyclewindows.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-cyclewindows.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-cyclewindows.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-cyclewindows.Tpo"; exit 1; fi
#	source='openbox/actions/cyclewindows.c' object='openbox/actions/openbox_openbox-cyclewindows.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-cyclewindows.o `test -f 'openbox/actions/cyclewindows.c' || echo '$(srcdir)/'`openbox/actions/cyclewindows.c

openbox/actions/openbox_openbox-cyclewindows.obj: openbox/actions/cyclewindows.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-cyclewindows.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-cyclewindows.Tpo" -c -o openbox/actions/openbox_openbox-cyclewindows.obj `if test -f 'openbox/actions/cyclewindows.c'; then $(CYGPATH_W) 'openbox/actions/cyclewindows.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/cyclewindows.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-cyclewindows.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-cyclewindows.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-cyclewindows.Tpo"; exit 1; fi
#	source='openbox/actions/cyclewindows.c' object='openbox/actions/openbox_openbox-cyclewindows.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-cyclewindows.obj `if test -f 'openbox/actions/cyclewindows.c'; then $(CYGPATH_W) 'openbox/actions/cyclewindows.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/cyclewindows.c'; fi`

openbox/actions/openbox_openbox-debug.o: openbox/actions/debug.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-debug.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-debug.Tpo" -c -o openbox/actions/openbox_openbox-debug.o `test -f 'openbox/actions/debug.c' || echo '$(srcdir)/'`openbox/actions/debug.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-debug.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-debug.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-debug.Tpo"; exit 1; fi
#	source='openbox/actions/debug.c' object='openbox/actions/openbox_openbox-debug.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-debug.o `test -f 'openbox/actions/debug.c' || echo '$(srcdir)/'`openbox/actions/debug.c

openbox/actions/openbox_openbox-debug.obj: openbox/actions/debug.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-debug.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-debug.Tpo" -c -o openbox/actions/openbox_openbox-debug.obj `if test -f 'openbox/actions/debug.c'; then $(CYGPATH_W) 'openbox/actions/debug.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/debug.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-debug.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-debug.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-debug.Tpo"; exit 1; fi
#	source='openbox/actions/debug.c' object='openbox/actions/openbox_openbox-debug.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-debug.obj `if test -f 'openbox/actions/debug.c'; then $(CYGPATH_W) 'openbox/actions/debug.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/debug.c'; fi`

openbox/actions/openbox_openbox-decorations.o: openbox/actions/decorations.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-decorations.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-decorations.Tpo" -c -o openbox/actions/openbox_openbox-decorations.o `test -f 'openbox/actions/decorations.c' || echo '$(srcdir)/'`openbox/actions/decorations.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-decorations.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-decorations.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-decorations.Tpo"; exit 1; fi
#	source='openbox/actions/decorations.c' object='openbox/actions/openbox_openbox-decorations.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-decorations.o `test -f 'openbox/actions/decorations.c' || echo '$(srcdir)/'`openbox/actions/decorations.c

openbox/actions/openbox_openbox-decorations.obj: openbox/actions/decorations.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-decorations.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-decorations.Tpo" -c -o openbox/actions/openbox_openbox-decorations.obj `if test -f 'openbox/actions/decorations.c'; then $(CYGPATH_W) 'openbox/actions/decorations.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/decorations.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-decorations.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-decorations.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-decorations.Tpo"; exit 1; fi
#	source='openbox/actions/decorations.c' object='openbox/actions/openbox_openbox-decorations.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-decorations.obj `if test -f 'openbox/actions/decorations.c'; then $(CYGPATH_W) 'openbox/actions/decorations.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/decorations.c'; fi`

openbox/actions/openbox_openbox-desktop.o: openbox/actions/desktop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-desktop.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-desktop.Tpo" -c -o openbox/actions/openbox_openbox-desktop.o `test -f 'openbox/actions/desktop.c' || echo '$(srcdir)/'`openbox/actions/desktop.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-desktop.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-desktop.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-desktop.Tpo"; exit 1; fi
#	source='openbox/actions/desktop.c' object='openbox/actions/openbox_openbox-desktop.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-desktop.o `test -f 'openbox/actions/desktop.c' || echo '$(srcdir)/'`openbox/actions/desktop.c

openbox/actions/openbox_openbox-desktop.obj: openbox/actions/desktop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-desktop.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-desktop.Tpo" -c -o openbox/actions/openbox_openbox-desktop.obj `if test -f 'openbox/actions/desktop.c'; then $(CYGPATH_W) 'openbox/actions/desktop.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/desktop.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-desktop.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-desktop.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-desktop.Tpo"; exit 1; fi
#	source='openbox/actions/desktop.c' object='openbox/actions/openbox_openbox-desktop.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-desktop.obj `if test -f 'openbox/actions/desktop.c'; then $(CYGPATH_W) 'openbox/actions/desktop.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/desktop.c'; fi`

openbox/actions/openbox_openbox-dockautohide.o: openbox/actions/dockautohide.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-dockautohide.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-dockautohide.Tpo" -c -o openbox/actions/openbox_openbox-dockautohide.o `test -f 'openbox/actions/dockautohide.c' || echo '$(srcdir)/'`openbox/actions/dockautohide.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-dockautohide.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-dockautohide.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-dockautohide.Tpo"; exit 1; fi
#	source='openbox/actions/dockautohide.c' object='openbox/actions/openbox_openbox-dockautohide.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-dockautohide.o `test -f 'openbox/actions/dockautohide.c' || echo '$(srcdir)/'`openbox/actions/dockautohide.c

openbox/actions/openbox_openbox-dockautohide.obj: openbox/actions/dockautohide.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-dockautohide.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-dockautohide.Tpo" -c -o openbox/actions/openbox_openbox-dockautohide.obj `if test -f 'openbox/actions/dockautohide.c'; then $(CYGPATH_W) 'openbox/actions/dockautohide.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/dockautohide.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-dockautohide.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-dockautohide.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-dockautohide.Tpo"; exit 1; fi
#	source='openbox/actions/dockautohide.c' object='openbox/actions/openbox_openbox-dockautohide.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-dockautohide.obj `if test -f 'openbox/actions/dockautohide.c'; then $(CYGPATH_W) 'openbox/actions/dockautohide.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/dockautohide.c'; fi`

openbox/actions/openbox_openbox-directionalwindows.o: openbox/actions/directionalwindows.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-directionalwindows.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-directionalwindows.Tpo" -c -o openbox/actions/openbox_openbox-directionalwindows.o `test -f 'openbox/actions/directionalwindows.c' || echo '$(srcdir)/'`openbox/actions/directionalwindows.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-directionalwindows.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-directionalwindows.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-directionalwindows.Tpo"; exit 1; fi
#	source='openbox/actions/directionalwindows.c' object='openbox/actions/openbox_openbox-directionalwindows.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-directionalwindows.o `test -f 'openbox/actions/directionalwindows.c' || echo '$(srcdir)/'`openbox/actions/directionalwindows.c

openbox/actions/openbox_openbox-directionalwindows.obj: openbox/actions/directionalwindows.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-directionalwindows.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-directionalwindows.Tpo" -c -o openbox/actions/openbox_openbox-directionalwindows.obj `if test -f 'openbox/actions/directionalwindows.c'; then $(CYGPATH_W) 'openbox/actions/directionalwindows.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/directionalwindows.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-directionalwindows.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-directionalwindows.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-directionalwindows.Tpo"; exit 1; fi
#	source='openbox/actions/directionalwindows.c' object='openbox/actions/openbox_openbox-directionalwindows.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-directionalwindows.obj `if test -f 'openbox/actions/directionalwindows.c'; then $(CYGPATH_W) 'openbox/actions/directionalwindows.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/directionalwindows.c'; fi`

openbox/actions/openbox_openbox-execute.o: openbox/actions/execute.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-execute.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-execute.Tpo" -c -o openbox/actions/openbox_openbox-execute.o `test -f 'openbox/actions/execute.c' || echo '$(srcdir)/'`openbox/actions/execute.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-execute.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-execute.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-execute.Tpo"; exit 1; fi
#	source='openbox/actions/execute.c' object='openbox/actions/openbox_openbox-execute.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-execute.o `test -f 'openbox/actions/execute.c' || echo '$(srcdir)/'`openbox/actions/execute.c

openbox/actions/openbox_openbox-execute.obj: openbox/actions/execute.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-execute.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-execute.Tpo" -c -o openbox/actions/openbox_openbox-execute.obj `if test -f 'openbox/actions/execute.c'; then $(CYGPATH_W) 'openbox/actions/execute.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/execute.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-execute.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-execute.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-execute.Tpo"; exit 1; fi
#	source='openbox/actions/execute.c' object='openbox/actions/openbox_openbox-execute.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-execute.obj `if test -f 'openbox/actions/execute.c'; then $(CYGPATH_W) 'openbox/actions/execute.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/execute.c'; fi`

openbox/actions/openbox_openbox-exit.o: openbox/actions/exit.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-exit.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-exit.Tpo" -c -o openbox/actions/openbox_openbox-exit.o `test -f 'openbox/actions/exit.c' || echo '$(srcdir)/'`openbox/actions/exit.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-exit.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-exit.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-exit.Tpo"; exit 1; fi
#	source='openbox/actions/exit.c' object='openbox/actions/openbox_openbox-exit.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-exit.o `test -f 'openbox/actions/exit.c' || echo '$(srcdir)/'`openbox/actions/exit.c

openbox/actions/openbox_openbox-exit.obj: openbox/actions/exit.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-exit.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-exit.Tpo" -c -o openbox/actions/openbox_openbox-exit.obj `if test -f 'openbox/actions/exit.c'; then $(CYGPATH_W) 'openbox/actions/exit.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/exit.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-exit.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-exit.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-exit.Tpo"; exit 1; fi
#	source='openbox/actions/exit.c' object='openbox/actions/openbox_openbox-exit.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-exit.obj `if test -f 'openbox/actions/exit.c'; then $(CYGPATH_W) 'openbox/actions/exit.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/exit.c'; fi`

openbox/actions/openbox_openbox-focus.o: openbox/actions/focus.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-focus.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-focus.Tpo" -c -o openbox/actions/openbox_openbox-focus.o `test -f 'openbox/actions/focus.c' || echo '$(srcdir)/'`openbox/actions/focus.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-focus.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-focus.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-focus.Tpo"; exit 1; fi
#	source='openbox/actions/focus.c' object='openbox/actions/openbox_openbox-focus.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-focus.o `test -f 'openbox/actions/focus.c' || echo '$(srcdir)/'`openbox/actions/focus.c

openbox/actions/openbox_openbox-focus.obj: openbox/actions/focus.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-focus.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-focus.Tpo" -c -o openbox/actions/openbox_openbox-focus.obj `if test -f 'openbox/actions/focus.c'; then $(CYGPATH_W) 'openbox/actions/focus.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/focus.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-focus.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-focus.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-focus.Tpo"; exit 1; fi
#	source='openbox/actions/focus.c' object='openbox/actions/openbox_openbox-focus.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-focus.obj `if test -f 'openbox/actions/focus.c'; then $(CYGPATH_W) 'openbox/actions/focus.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/focus.c'; fi`

openbox/actions/openbox_openbox-focustobottom.o: openbox/actions/focustobottom.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-focustobottom.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-focustobottom.Tpo" -c -o openbox/actions/openbox_openbox-focustobottom.o `test -f 'openbox/actions/focustobottom.c' || echo '$(srcdir)/'`openbox/actions/focustobottom.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-focustobottom.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-focustobottom.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-focustobottom.Tpo"; exit 1; fi
#	source='openbox/actions/focustobottom.c' object='openbox/actions/openbox_openbox-focustobottom.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-focustobottom.o `test -f 'openbox/actions/focustobottom.c' || echo '$(srcdir)/'`openbox/actions/focustobottom.c

openbox/actions/openbox_openbox-focustobottom.obj: openbox/actions/focustobottom.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-focustobottom.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-focustobottom.Tpo" -c -o openbox/actions/openbox_openbox-focustobottom.obj `if test -f 'openbox/actions/focustobottom.c'; then $(CYGPATH_W) 'openbox/actions/focustobottom.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/focustobottom.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-focustobottom.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-focustobottom.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-focustobottom.Tpo"; exit 1; fi
#	source='openbox/actions/focustobottom.c' object='openbox/actions/openbox_openbox-focustobottom.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-focustobottom.obj `if test -f 'openbox/actions/focustobottom.c'; then $(CYGPATH_W) 'openbox/actions/focustobottom.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/focustobottom.c'; fi`

openbox/actions/openbox_openbox-fullscreen.o: openbox/actions/fullscreen.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-fullscreen.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-fullscreen.Tpo" -c -o openbox/actions/openbox_openbox-fullscreen.o `test -f 'openbox/actions/fullscreen.c' || echo '$(srcdir)/'`openbox/actions/fullscreen.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-fullscreen.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-fullscreen.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-fullscreen.Tpo"; exit 1; fi
#	source='openbox/actions/fullscreen.c' object='openbox/actions/openbox_openbox-fullscreen.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-fullscreen.o `test -f 'openbox/actions/fullscreen.c' || echo '$(srcdir)/'`openbox/actions/fullscreen.c

openbox/actions/openbox_openbox-fullscreen.obj: openbox/actions/fullscreen.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-fullscreen.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-fullscreen.Tpo" -c -o openbox/actions/openbox_openbox-fullscreen.obj `if test -f 'openbox/actions/fullscreen.c'; then $(CYGPATH_W) 'openbox/actions/fullscreen.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/fullscreen.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-fullscreen.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-fullscreen.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-fullscreen.Tpo"; exit 1; fi
#	source='openbox/actions/fullscreen.c' object='openbox/actions/openbox_openbox-fullscreen.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-fullscreen.obj `if test -f 'openbox/actions/fullscreen.c'; then $(CYGPATH_W) 'openbox/actions/fullscreen.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/fullscreen.c'; fi`

openbox/actions/openbox_openbox-growtoedge.o: openbox/actions/growtoedge.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-growtoedge.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-growtoedge.Tpo" -c -o openbox/actions/openbox_openbox-growtoedge.o `test -f 'openbox/actions/growtoedge.c' || echo '$(srcdir)/'`openbox/actions/growtoedge.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-growtoedge.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-growtoedge.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-growtoedge.Tpo"; exit 1; fi
#	source='openbox/actions/growtoedge.c' object='openbox/actions/openbox_openbox-growtoedge.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-growtoedge.o `test -f 'openbox/actions/growtoedge.c' || echo '$(srcdir)/'`openbox/actions/growtoedge.c

openbox/actions/openbox_openbox-growtoedge.obj: openbox/actions/growtoedge.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-growtoedge.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-growtoedge.Tpo" -c -o openbox/actions/openbox_openbox-growtoedge.obj `if test -f 'openbox/actions/growtoedge.c'; then $(CYGPATH_W) 'openbox/actions/growtoedge.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/growtoedge.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-growtoedge.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-growtoedge.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-growtoedge.Tpo"; exit 1; fi
#	source='openbox/actions/growtoedge.c' object='openbox/actions/openbox_openbox-growtoedge.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-growtoedge.obj `if test -f 'openbox/actions/growtoedge.c'; then $(CYGPATH_W) 'openbox/actions/growtoedge.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/growtoedge.c'; fi`

openbox/actions/openbox_openbox-iconify.o: openbox/actions/iconify.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-iconify.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-iconify.Tpo" -c -o openbox/actions/openbox_openbox-iconify.o `test -f 'openbox/actions/iconify.c' || echo '$(srcdir)/'`openbox/actions/iconify.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-iconify.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-iconify.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-iconify.Tpo"; exit 1; fi
#	source='openbox/actions/iconify.c' object='openbox/actions/openbox_openbox-iconify.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-iconify.o `test -f 'openbox/actions/iconify.c' || echo '$(srcdir)/'`openbox/actions/iconify.c

openbox/actions/openbox_openbox-iconify.obj: openbox/actions/iconify.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-iconify.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-iconify.Tpo" -c -o openbox/actions/openbox_openbox-iconify.obj `if test -f 'openbox/actions/iconify.c'; then $(CYGPATH_W) 'openbox/actions/iconify.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/iconify.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-iconify.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-iconify.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-iconify.Tpo"; exit 1; fi
#	source='openbox/actions/iconify.c' object='openbox/actions/openbox_openbox-iconify.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-iconify.obj `if test -f 'openbox/actions/iconify.c'; then $(CYGPATH_W) 'openbox/actions/iconify.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/iconify.c'; fi`

openbox/actions/openbox_openbox-kill.o: openbox/actions/kill.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-kill.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-kill.Tpo" -c -o openbox/actions/openbox_openbox-kill.o `test -f 'openbox/actions/kill.c' || echo '$(srcdir)/'`openbox/actions/kill.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-kill.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-kill.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-kill.Tpo"; exit 1; fi
#	source='openbox/actions/kill.c' object='openbox/actions/openbox_openbox-kill.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-kill.o `test -f 'openbox/actions/kill.c' || echo '$(srcdir)/'`openbox/actions/kill.c

openbox/actions/openbox_openbox-kill.obj: openbox/actions/kill.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-kill.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-kill.Tpo" -c -o openbox/actions/openbox_openbox-kill.obj `if test -f 'openbox/actions/kill.c'; then $(CYGPATH_W) 'openbox/actions/kill.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/kill.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-kill.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-kill.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-kill.Tpo"; exit 1; fi
#	source='openbox/actions/kill.c' object='openbox/actions/openbox_openbox-kill.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-kill.obj `if test -f 'openbox/actions/kill.c'; then $(CYGPATH_W) 'openbox/actions/kill.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/kill.c'; fi`

openbox/actions/openbox_openbox-layer.o: openbox/actions/layer.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-layer.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-layer.Tpo" -c -o openbox/actions/openbox_openbox-layer.o `test -f 'openbox/actions/layer.c' || echo '$(srcdir)/'`openbox/actions/layer.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-layer.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-layer.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-layer.Tpo"; exit 1; fi
#	source='openbox/actions/layer.c' object='openbox/actions/openbox_openbox-layer.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-layer.o `test -f 'openbox/actions/layer.c' || echo '$(srcdir)/'`openbox/actions/layer.c

openbox/actions/openbox_openbox-layer.obj: openbox/actions/layer.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-layer.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-layer.Tpo" -c -o openbox/actions/openbox_openbox-layer.obj `if test -f 'openbox/actions/layer.c'; then $(CYGPATH_W) 'openbox/actions/layer.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/layer.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-layer.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-layer.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-layer.Tpo"; exit 1; fi
#	source='openbox/actions/layer.c' object='openbox/actions/openbox_openbox-layer.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-layer.obj `if test -f 'openbox/actions/layer.c'; then $(CYGPATH_W) 'openbox/actions/layer.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/layer.c'; fi`

openbox/actions/openbox_openbox-lower.o: openbox/actions/lower.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-lower.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-lower.Tpo" -c -o openbox/actions/openbox_openbox-lower.o `test -f 'openbox/actions/lower.c' || echo '$(srcdir)/'`openbox/actions/lower.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-lower.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-lower.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-lower.Tpo"; exit 1; fi
#	source='openbox/actions/lower.c' object='openbox/actions/openbox_openbox-lower.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-lower.o `test -f 'openbox/actions/lower.c' || echo '$(srcdir)/'`openbox/actions/lower.c

openbox/actions/openbox_openbox-lower.obj: openbox/actions/lower.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-lower.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-lower.Tpo" -c -o openbox/actions/openbox_openbox-lower.obj `if test -f 'openbox/actions/lower.c'; then $(CYGPATH_W) 'openbox/actions/lower.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/lower.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-lower.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-lower.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-lower.Tpo"; exit 1; fi
#	source='openbox/actions/lower.c' object='openbox/actions/openbox_openbox-lower.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-lower.obj `if test -f 'openbox/actions/lower.c'; then $(CYGPATH_W) 'openbox/actions/lower.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/lower.c'; fi`

openbox/actions/openbox_openbox-maximize.o: openbox/actions/maximize.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-maximize.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-maximize.Tpo" -c -o openbox/actions/openbox_openbox-maximize.o `test -f 'openbox/actions/maximize.c' || echo '$(srcdir)/'`openbox/actions/maximize.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-maximize.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-maximize.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-maximize.Tpo"; exit 1; fi
#	source='openbox/actions/maximize.c' object='openbox/actions/openbox_openbox-maximize.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-maximize.o `test -f 'openbox/actions/maximize.c' || echo '$(srcdir)/'`openbox/actions/maximize.c

openbox/actions/openbox_openbox-maximize.obj: openbox/actions/maximize.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-maximize.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-maximize.Tpo" -c -o openbox/actions/openbox_openbox-maximize.obj `if test -f 'openbox/actions/maximize.c'; then $(CYGPATH_W) 'openbox/actions/maximize.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/maximize.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-maximize.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-maximize.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-maximize.Tpo"; exit 1; fi
#	source='openbox/actions/maximize.c' object='openbox/actions/openbox_openbox-maximize.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-maximize.obj `if test -f 'openbox/actions/maximize.c'; then $(CYGPATH_W) 'openbox/actions/maximize.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/maximize.c'; fi`

openbox/actions/openbox_openbox-move.o: openbox/actions/move.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-move.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-move.Tpo" -c -o openbox/actions/openbox_openbox-move.o `test -f 'openbox/actions/move.c' || echo '$(srcdir)/'`openbox/actions/move.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-move.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-move.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-move.Tpo"; exit 1; fi
#	source='openbox/actions/move.c' object='openbox/actions/openbox_openbox-move.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-move.o `test -f 'openbox/actions/move.c' || echo '$(srcdir)/'`openbox/actions/move.c

openbox/actions/openbox_openbox-move.obj: openbox/actions/move.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-move.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-move.Tpo" -c -o openbox/actions/openbox_openbox-move.obj `if test -f 'openbox/actions/move.c'; then $(CYGPATH_W) 'openbox/actions/move.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/move.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-move.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-move.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-move.Tpo"; exit 1; fi
#	source='openbox/actions/move.c' object='openbox/actions/openbox_openbox-move.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-move.obj `if test -f 'openbox/actions/move.c'; then $(CYGPATH_W) 'openbox/actions/move.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/move.c'; fi`

openbox/actions/openbox_openbox-moverelative.o: openbox/actions/moverelative.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-moverelative.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-moverelative.Tpo" -c -o openbox/actions/openbox_openbox-moverelative.o `test -f 'openbox/actions/moverelative.c' || echo '$(srcdir)/'`openbox/actions/moverelative.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-moverelative.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-moverelative.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-moverelative.Tpo"; exit 1; fi
#	source='openbox/actions/moverelative.c' object='openbox/actions/openbox_openbox-moverelative.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-moverelative.o `test -f 'openbox/actions/moverelative.c' || echo '$(srcdir)/'`openbox/actions/moverelative.c

openbox/actions/openbox_openbox-moverelative.obj: openbox/actions/moverelative.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-moverelative.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-moverelative.Tpo" -c -o openbox/actions/openbox_openbox-moverelative.obj `if test -f 'openbox/actions/moverelative.c'; then $(CYGPATH_W) 'openbox/actions/moverelative.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/moverelative.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-moverelative.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-moverelative.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-moverelative.Tpo"; exit 1; fi
#	source='openbox/actions/moverelative.c' object='openbox/actions/openbox_openbox-moverelative.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-moverelative.obj `if test -f 'openbox/actions/moverelative.c'; then $(CYGPATH_W) 'openbox/actions/moverelative.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/moverelative.c'; fi`

openbox/actions/openbox_openbox-moveresizeto.o: openbox/actions/moveresizeto.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-moveresizeto.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-moveresizeto.Tpo" -c -o openbox/actions/openbox_openbox-moveresizeto.o `test -f 'openbox/actions/moveresizeto.c' || echo '$(srcdir)/'`openbox/actions/moveresizeto.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-moveresizeto.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-moveresizeto.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-moveresizeto.Tpo"; exit 1; fi
#	source='openbox/actions/moveresizeto.c' object='openbox/actions/openbox_openbox-moveresizeto.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-moveresizeto.o `test -f 'openbox/actions/moveresizeto.c' || echo '$(srcdir)/'`openbox/actions/moveresizeto.c

openbox/actions/openbox_openbox-moveresizeto.obj: openbox/actions/moveresizeto.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-moveresizeto.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-moveresizeto.Tpo" -c -o openbox/actions/openbox_openbox-moveresizeto.obj `if test -f 'openbox/actions/moveresizeto.c'; then $(CYGPATH_W) 'openbox/actions/moveresizeto.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/moveresizeto.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-moveresizeto.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-moveresizeto.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-moveresizeto.Tpo"; exit 1; fi
#	source='openbox/actions/moveresizeto.c' object='openbox/actions/openbox_openbox-moveresizeto.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-moveresizeto.obj `if test -f 'openbox/actions/moveresizeto.c'; then $(CYGPATH_W) 'openbox/actions/moveresizeto.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/moveresizeto.c'; fi`

openbox/actions/openbox_openbox-movetoedge.o: openbox/actions/movetoedge.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-movetoedge.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-movetoedge.Tpo" -c -o openbox/actions/openbox_openbox-movetoedge.o `test -f 'openbox/actions/movetoedge.c' || echo '$(srcdir)/'`openbox/actions/movetoedge.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-movetoedge.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-movetoedge.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-movetoedge.Tpo"; exit 1; fi
#	source='openbox/actions/movetoedge.c' object='openbox/actions/openbox_openbox-movetoedge.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-movetoedge.o `test -f 'openbox/actions/movetoedge.c' || echo '$(srcdir)/'`openbox/actions/movetoedge.c

openbox/actions/openbox_openbox-movetoedge.obj: openbox/actions/movetoedge.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-movetoedge.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-movetoedge.Tpo" -c -o openbox/actions/openbox_openbox-movetoedge.obj `if test -f 'openbox/actions/movetoedge.c'; then $(CYGPATH_W) 'openbox/actions/movetoedge.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/movetoedge.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-movetoedge.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-movetoedge.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-movetoedge.Tpo"; exit 1; fi
#	source='openbox/actions/movetoedge.c' object='openbox/actions/openbox_openbox-movetoedge.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-movetoedge.obj `if test -f 'openbox/actions/movetoedge.c'; then $(CYGPATH_W) 'openbox/actions/movetoedge.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/movetoedge.c'; fi`

openbox/actions/openbox_openbox-omnipresent.o: openbox/actions/omnipresent.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-omnipresent.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-omnipresent.Tpo" -c -o openbox/actions/openbox_openbox-omnipresent.o `test -f 'openbox/actions/omnipresent.c' || echo '$(srcdir)/'`openbox/actions/omnipresent.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-omnipresent.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-omnipresent.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-omnipresent.Tpo"; exit 1; fi
#	source='openbox/actions/omnipresent.c' object='openbox/actions/openbox_openbox-omnipresent.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-omnipresent.o `test -f 'openbox/actions/omnipresent.c' || echo '$(srcdir)/'`openbox/actions/omnipresent.c

openbox/actions/openbox_openbox-omnipresent.obj: openbox/actions/omnipresent.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-omnipresent.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-omnipresent.Tpo" -c -o openbox/actions/openbox_openbox-omnipresent.obj `if test -f 'openbox/actions/omnipresent.c'; then $(CYGPATH_W) 'openbox/actions/omnipresent.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/omnipresent.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-omnipresent.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-omnipresent.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-omnipresent.Tpo"; exit 1; fi
#	source='openbox/actions/omnipresent.c' object='openbox/actions/openbox_openbox-omnipresent.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-omnipresent.obj `if test -f 'openbox/actions/omnipresent.c'; then $(CYGPATH_W) 'openbox/actions/omnipresent.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/omnipresent.c'; fi`

openbox/actions/openbox_openbox-raise.o: openbox/actions/raise.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-raise.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-raise.Tpo" -c -o openbox/actions/openbox_openbox-raise.o `test -f 'openbox/actions/raise.c' || echo '$(srcdir)/'`openbox/actions/raise.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-raise.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-raise.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-raise.Tpo"; exit 1; fi
#	source='openbox/actions/raise.c' object='openbox/actions/openbox_openbox-raise.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-raise.o `test -f 'openbox/actions/raise.c' || echo '$(srcdir)/'`openbox/actions/raise.c

openbox/actions/openbox_openbox-raise.obj: openbox/actions/raise.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-raise.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-raise.Tpo" -c -o openbox/actions/openbox_openbox-raise.obj `if test -f 'openbox/actions/raise.c'; then $(CYGPATH_W) 'openbox/actions/raise.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/raise.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-raise.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-raise.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-raise.Tpo"; exit 1; fi
#	source='openbox/actions/raise.c' object='openbox/actions/openbox_openbox-raise.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-raise.obj `if test -f 'openbox/actions/raise.c'; then $(CYGPATH_W) 'openbox/actions/raise.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/raise.c'; fi`

openbox/actions/openbox_openbox-raiselower.o: openbox/actions/raiselower.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-raiselower.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-raiselower.Tpo" -c -o openbox/actions/openbox_openbox-raiselower.o `test -f 'openbox/actions/raiselower.c' || echo '$(srcdir)/'`openbox/actions/raiselower.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-raiselower.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-raiselower.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-raiselower.Tpo"; exit 1; fi
#	source='openbox/actions/raiselower.c' object='openbox/actions/openbox_openbox-raiselower.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-raiselower.o `test -f 'openbox/actions/raiselower.c' || echo '$(srcdir)/'`openbox/actions/raiselower.c

openbox/actions/openbox_openbox-raiselower.obj: openbox/actions/raiselower.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-raiselower.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-raiselower.Tpo" -c -o openbox/actions/openbox_openbox-raiselower.obj `if test -f 'openbox/actions/raiselower.c'; then $(CYGPATH_W) 'openbox/actions/raiselower.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/raiselower.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-raiselower.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-raiselower.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-raiselower.Tpo"; exit 1; fi
#	source='openbox/actions/raiselower.c' object='openbox/actions/openbox_openbox-raiselower.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-raiselower.obj `if test -f 'openbox/actions/raiselower.c'; then $(CYGPATH_W) 'openbox/actions/raiselower.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/raiselower.c'; fi`

openbox/actions/openbox_openbox-reconfigure.o: openbox/actions/reconfigure.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-reconfigure.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-reconfigure.Tpo" -c -o openbox/actions/openbox_openbox-reconfigure.o `test -f 'openbox/actions/reconfigure.c' || echo '$(srcdir)/'`openbox/actions/reconfigure.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-reconfigure.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-reconfigure.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-reconfigure.Tpo"; exit 1; fi
#	source='openbox/actions/reconfigure.c' object='openbox/actions/openbox_openbox-reconfigure.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-reconfigure.o `test -f 'openbox/actions/reconfigure.c' || echo '$(srcdir)/'`openbox/actions/reconfigure.c

openbox/actions/openbox_openbox-reconfigure.obj: openbox/actions/reconfigure.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-reconfigure.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-reconfigure.Tpo" -c -o openbox/actions/openbox_openbox-reconfigure.obj `if test -f 'openbox/actions/reconfigure.c'; then $(CYGPATH_W) 'openbox/actions/reconfigure.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/reconfigure.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-reconfigure.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-reconfigure.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-reconfigure.Tpo"; exit 1; fi
#	source='openbox/actions/reconfigure.c' object='openbox/actions/openbox_openbox-reconfigure.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-reconfigure.obj `if test -f 'openbox/actions/reconfigure.c'; then $(CYGPATH_W) 'openbox/actions/reconfigure.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/reconfigure.c'; fi`

openbox/actions/openbox_openbox-resize.o: openbox/actions/resize.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-resize.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-resize.Tpo" -c -o openbox/actions/openbox_openbox-resize.o `test -f 'openbox/actions/resize.c' || echo '$(srcdir)/'`openbox/actions/resize.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-resize.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-resize.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-resize.Tpo"; exit 1; fi
#	source='openbox/actions/resize.c' object='openbox/actions/openbox_openbox-resize.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-resize.o `test -f 'openbox/actions/resize.c' || echo '$(srcdir)/'`openbox/actions/resize.c

openbox/actions/openbox_openbox-resize.obj: openbox/actions/resize.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-resize.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-resize.Tpo" -c -o openbox/actions/openbox_openbox-resize.obj `if test -f 'openbox/actions/resize.c'; then $(CYGPATH_W) 'openbox/actions/resize.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/resize.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-resize.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-resize.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-resize.Tpo"; exit 1; fi
#	source='openbox/actions/resize.c' object='openbox/actions/openbox_openbox-resize.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-resize.obj `if test -f 'openbox/actions/resize.c'; then $(CYGPATH_W) 'openbox/actions/resize.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/resize.c'; fi`

openbox/actions/openbox_openbox-resizerelative.o: openbox/actions/resizerelative.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-resizerelative.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-resizerelative.Tpo" -c -o openbox/actions/openbox_openbox-resizerelative.o `test -f 'openbox/actions/resizerelative.c' || echo '$(srcdir)/'`openbox/actions/resizerelative.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-resizerelative.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-resizerelative.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-resizerelative.Tpo"; exit 1; fi
#	source='openbox/actions/resizerelative.c' object='openbox/actions/openbox_openbox-resizerelative.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-resizerelative.o `test -f 'openbox/actions/resizerelative.c' || echo '$(srcdir)/'`openbox/actions/resizerelative.c

openbox/actions/openbox_openbox-resizerelative.obj: openbox/actions/resizerelative.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-resizerelative.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-resizerelative.Tpo" -c -o openbox/actions/openbox_openbox-resizerelative.obj `if test -f 'openbox/actions/resizerelative.c'; then $(CYGPATH_W) 'openbox/actions/resizerelative.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/resizerelative.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-resizerelative.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-resizerelative.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-resizerelative.Tpo"; exit 1; fi
#	source='openbox/actions/resizerelative.c' object='openbox/actions/openbox_openbox-resizerelative.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-resizerelative.obj `if test -f 'openbox/actions/resizerelative.c'; then $(CYGPATH_W) 'openbox/actions/resizerelative.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/resizerelative.c'; fi`

openbox/actions/openbox_openbox-restart.o: openbox/actions/restart.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-restart.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-restart.Tpo" -c -o openbox/actions/openbox_openbox-restart.o `test -f 'openbox/actions/restart.c' || echo '$(srcdir)/'`openbox/actions/restart.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-restart.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-restart.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-restart.Tpo"; exit 1; fi
#	source='openbox/actions/restart.c' object='openbox/actions/openbox_openbox-restart.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-restart.o `test -f 'openbox/actions/restart.c' || echo '$(srcdir)/'`openbox/actions/restart.c

openbox/actions/openbox_openbox-restart.obj: openbox/actions/restart.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-restart.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-restart.Tpo" -c -o openbox/actions/openbox_openbox-restart.obj `if test -f 'openbox/actions/restart.c'; then $(CYGPATH_W) 'openbox/actions/restart.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/restart.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-restart.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-restart.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-restart.Tpo"; exit 1; fi
#	source='openbox/actions/restart.c' object='openbox/actions/openbox_openbox-restart.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-restart.obj `if test -f 'openbox/actions/restart.c'; then $(CYGPATH_W) 'openbox/actions/restart.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/restart.c'; fi`

openbox/actions/openbox_openbox-shade.o: openbox/actions/shade.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-shade.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-shade.Tpo" -c -o openbox/actions/openbox_openbox-shade.o `test -f 'openbox/actions/shade.c' || echo '$(srcdir)/'`openbox/actions/shade.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-shade.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-shade.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-shade.Tpo"; exit 1; fi
#	source='openbox/actions/shade.c' object='openbox/actions/openbox_openbox-shade.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-shade.o `test -f 'openbox/actions/shade.c' || echo '$(srcdir)/'`openbox/actions/shade.c

openbox/actions/openbox_openbox-shade.obj: openbox/actions/shade.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-shade.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-shade.Tpo" -c -o openbox/actions/openbox_openbox-shade.obj `if test -f 'openbox/actions/shade.c'; then $(CYGPATH_W) 'openbox/actions/shade.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/shade.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-shade.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-shade.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-shade.Tpo"; exit 1; fi
#	source='openbox/actions/shade.c' object='openbox/actions/openbox_openbox-shade.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-shade.obj `if test -f 'openbox/actions/shade.c'; then $(CYGPATH_W) 'openbox/actions/shade.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/shade.c'; fi`

openbox/actions/openbox_openbox-shadelowerraise.o: openbox/actions/shadelowerraise.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-shadelowerraise.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-shadelowerraise.Tpo" -c -o openbox/actions/openbox_openbox-shadelowerraise.o `test -f 'openbox/actions/shadelowerraise.c' || echo '$(srcdir)/'`openbox/actions/shadelowerraise.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-shadelowerraise.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-shadelowerraise.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-shadelowerraise.Tpo"; exit 1; fi
#	source='openbox/actions/shadelowerraise.c' object='openbox/actions/openbox_openbox-shadelowerraise.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-shadelowerraise.o `test -f 'openbox/actions/shadelowerraise.c' || echo '$(srcdir)/'`openbox/actions/shadelowerraise.c

openbox/actions/openbox_openbox-shadelowerraise.obj: openbox/actions/shadelowerraise.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-shadelowerraise.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-shadelowerraise.Tpo" -c -o openbox/actions/openbox_openbox-shadelowerraise.obj `if test -f 'openbox/actions/shadelowerraise.c'; then $(CYGPATH_W) 'openbox/actions/shadelowerraise.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/shadelowerraise.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-shadelowerraise.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-shadelowerraise.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-shadelowerraise.Tpo"; exit 1; fi
#	source='openbox/actions/shadelowerraise.c' object='openbox/actions/openbox_openbox-shadelowerraise.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-shadelowerraise.obj `if test -f 'openbox/actions/shadelowerraise.c'; then $(CYGPATH_W) 'openbox/actions/shadelowerraise.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/shadelowerraise.c'; fi`

openbox/actions/openbox_openbox-showdesktop.o: openbox/actions/showdesktop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-showdesktop.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-showdesktop.Tpo" -c -o openbox/actions/openbox_openbox-showdesktop.o `test -f 'openbox/actions/showdesktop.c' || echo '$(srcdir)/'`openbox/actions/showdesktop.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-showdesktop.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-showdesktop.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-showdesktop.Tpo"; exit 1; fi
#	source='openbox/actions/showdesktop.c' object='openbox/actions/openbox_openbox-showdesktop.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-showdesktop.o `test -f 'openbox/actions/showdesktop.c' || echo '$(srcdir)/'`openbox/actions/showdesktop.c

openbox/actions/openbox_openbox-showdesktop.obj: openbox/actions/showdesktop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-showdesktop.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-showdesktop.Tpo" -c -o openbox/actions/openbox_openbox-showdesktop.obj `if test -f 'openbox/actions/showdesktop.c'; then $(CYGPATH_W) 'openbox/actions/showdesktop.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/showdesktop.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-showdesktop.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-showdesktop.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-showdesktop.Tpo"; exit 1; fi
#	source='openbox/actions/showdesktop.c' object='openbox/actions/openbox_openbox-showdesktop.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-showdesktop.obj `if test -f 'openbox/actions/showdesktop.c'; then $(CYGPATH_W) 'openbox/actions/showdesktop.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/showdesktop.c'; fi`

openbox/actions/openbox_openbox-showmenu.o: openbox/actions/showmenu.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-showmenu.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-showmenu.Tpo" -c -o openbox/actions/openbox_openbox-showmenu.o `test -f 'openbox/actions/showmenu.c' || echo '$(srcdir)/'`openbox/actions/showmenu.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-showmenu.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-showmenu.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-showmenu.Tpo"; exit 1; fi
#	source='openbox/actions/showmenu.c' object='openbox/actions/openbox_openbox-showmenu.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-showmenu.o `test -f 'openbox/actions/showmenu.c' || echo '$(srcdir)/'`openbox/actions/showmenu.c

openbox/actions/openbox_openbox-showmenu.obj: openbox/actions/showmenu.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-showmenu.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-showmenu.Tpo" -c -o openbox/actions/openbox_openbox-showmenu.obj `if test -f 'openbox/actions/showmenu.c'; then $(CYGPATH_W) 'openbox/actions/showmenu.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/showmenu.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-showmenu.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-showmenu.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-showmenu.Tpo"; exit 1; fi
#	source='openbox/actions/showmenu.c' object='openbox/actions/openbox_openbox-showmenu.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-showmenu.obj `if test -f 'openbox/actions/showmenu.c'; then $(CYGPATH_W) 'openbox/actions/showmenu.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/showmenu.c'; fi`

openbox/actions/openbox_openbox-unfocus.o: openbox/actions/unfocus.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-unfocus.o -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-unfocus.Tpo" -c -o openbox/actions/openbox_openbox-unfocus.o `test -f 'openbox/actions/unfocus.c' || echo '$(srcdir)/'`openbox/actions/unfocus.c; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-unfocus.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-unfocus.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-unfocus.Tpo"; exit 1; fi
#	source='openbox/actions/unfocus.c' object='openbox/actions/openbox_openbox-unfocus.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-unfocus.o `test -f 'openbox/actions/unfocus.c' || echo '$(srcdir)/'`openbox/actions/unfocus.c

openbox/actions/openbox_openbox-unfocus.obj: openbox/actions/unfocus.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/actions/openbox_openbox-unfocus.obj -MD -MP -MF "openbox/actions/$(DEPDIR)/openbox_openbox-unfocus.Tpo" -c -o openbox/actions/openbox_openbox-unfocus.obj `if test -f 'openbox/actions/unfocus.c'; then $(CYGPATH_W) 'openbox/actions/unfocus.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/unfocus.c'; fi`; \
#	then mv -f "openbox/actions/$(DEPDIR)/openbox_openbox-unfocus.Tpo" "openbox/actions/$(DEPDIR)/openbox_openbox-unfocus.Po"; else rm -f "openbox/actions/$(DEPDIR)/openbox_openbox-unfocus.Tpo"; exit 1; fi
#	source='openbox/actions/unfocus.c' object='openbox/actions/openbox_openbox-unfocus.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/actions/openbox_openbox-unfocus.obj `if test -f 'openbox/actions/unfocus.c'; then $(CYGPATH_W) 'openbox/actions/unfocus.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions/unfocus.c'; fi`

openbox/openbox_openbox-actions.o: openbox/actions.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-actions.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-actions.Tpo" -c -o openbox/openbox_openbox-actions.o `test -f 'openbox/actions.c' || echo '$(srcdir)/'`openbox/actions.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-actions.Tpo" "openbox/$(DEPDIR)/openbox_openbox-actions.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-actions.Tpo"; exit 1; fi
#	source='openbox/actions.c' object='openbox/openbox_openbox-actions.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-actions.o `test -f 'openbox/actions.c' || echo '$(srcdir)/'`openbox/actions.c

openbox/openbox_openbox-actions.obj: openbox/actions.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-actions.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-actions.Tpo" -c -o openbox/openbox_openbox-actions.obj `if test -f 'openbox/actions.c'; then $(CYGPATH_W) 'openbox/actions.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-actions.Tpo" "openbox/$(DEPDIR)/openbox_openbox-actions.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-actions.Tpo"; exit 1; fi
#	source='openbox/actions.c' object='openbox/openbox_openbox-actions.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-actions.obj `if test -f 'openbox/actions.c'; then $(CYGPATH_W) 'openbox/actions.c'; else $(CYGPATH_W) '$(srcdir)/openbox/actions.c'; fi`

openbox/openbox_openbox-client.o: openbox/client.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-client.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-client.Tpo" -c -o openbox/openbox_openbox-client.o `test -f 'openbox/client.c' || echo '$(srcdir)/'`openbox/client.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-client.Tpo" "openbox/$(DEPDIR)/openbox_openbox-client.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-client.Tpo"; exit 1; fi
#	source='openbox/client.c' object='openbox/openbox_openbox-client.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-client.o `test -f 'openbox/client.c' || echo '$(srcdir)/'`openbox/client.c

openbox/openbox_openbox-client.obj: openbox/client.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-client.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-client.Tpo" -c -o openbox/openbox_openbox-client.obj `if test -f 'openbox/client.c'; then $(CYGPATH_W) 'openbox/client.c'; else $(CYGPATH_W) '$(srcdir)/openbox/client.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-client.Tpo" "openbox/$(DEPDIR)/openbox_openbox-client.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-client.Tpo"; exit 1; fi
#	source='openbox/client.c' object='openbox/openbox_openbox-client.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-client.obj `if test -f 'openbox/client.c'; then $(CYGPATH_W) 'openbox/client.c'; else $(CYGPATH_W) '$(srcdir)/openbox/client.c'; fi`

openbox/openbox_openbox-client_list_menu.o: openbox/client_list_menu.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-client_list_menu.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-client_list_menu.Tpo" -c -o openbox/openbox_openbox-client_list_menu.o `test -f 'openbox/client_list_menu.c' || echo '$(srcdir)/'`openbox/client_list_menu.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-client_list_menu.Tpo" "openbox/$(DEPDIR)/openbox_openbox-client_list_menu.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-client_list_menu.Tpo"; exit 1; fi
#	source='openbox/client_list_menu.c' object='openbox/openbox_openbox-client_list_menu.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-client_list_menu.o `test -f 'openbox/client_list_menu.c' || echo '$(srcdir)/'`openbox/client_list_menu.c

openbox/openbox_openbox-client_list_menu.obj: openbox/client_list_menu.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-client_list_menu.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-client_list_menu.Tpo" -c -o openbox/openbox_openbox-client_list_menu.obj `if test -f 'openbox/client_list_menu.c'; then $(CYGPATH_W) 'openbox/client_list_menu.c'; else $(CYGPATH_W) '$(srcdir)/openbox/client_list_menu.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-client_list_menu.Tpo" "openbox/$(DEPDIR)/openbox_openbox-client_list_menu.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-client_list_menu.Tpo"; exit 1; fi
#	source='openbox/client_list_menu.c' object='openbox/openbox_openbox-client_list_menu.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-client_list_menu.obj `if test -f 'openbox/client_list_menu.c'; then $(CYGPATH_W) 'openbox/client_list_menu.c'; else $(CYGPATH_W) '$(srcdir)/openbox/client_list_menu.c'; fi`

openbox/openbox_openbox-client_list_combined_menu.o: openbox/client_list_combined_menu.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-client_list_combined_menu.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-client_list_combined_menu.Tpo" -c -o openbox/openbox_openbox-client_list_combined_menu.o `test -f 'openbox/client_list_combined_menu.c' || echo '$(srcdir)/'`openbox/client_list_combined_menu.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-client_list_combined_menu.Tpo" "openbox/$(DEPDIR)/openbox_openbox-client_list_combined_menu.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-client_list_combined_menu.Tpo"; exit 1; fi
#	source='openbox/client_list_combined_menu.c' object='openbox/openbox_openbox-client_list_combined_menu.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-client_list_combined_menu.o `test -f 'openbox/client_list_combined_menu.c' || echo '$(srcdir)/'`openbox/client_list_combined_menu.c

openbox/openbox_openbox-client_list_combined_menu.obj: openbox/client_list_combined_menu.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-client_list_combined_menu.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-client_list_combined_menu.Tpo" -c -o openbox/openbox_openbox-client_list_combined_menu.obj `if test -f 'openbox/client_list_combined_menu.c'; then $(CYGPATH_W) 'openbox/client_list_combined_menu.c'; else $(CYGPATH_W) '$(srcdir)/openbox/client_list_combined_menu.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-client_list_combined_menu.Tpo" "openbox/$(DEPDIR)/openbox_openbox-client_list_combined_menu.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-client_list_combined_menu.Tpo"; exit 1; fi
#	source='openbox/client_list_combined_menu.c' object='openbox/openbox_openbox-client_list_combined_menu.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-client_list_combined_menu.obj `if test -f 'openbox/client_list_combined_menu.c'; then $(CYGPATH_W) 'openbox/client_list_combined_menu.c'; else $(CYGPATH_W) '$(srcdir)/openbox/client_list_combined_menu.c'; fi`

openbox/openbox_openbox-client_menu.o: openbox/client_menu.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-client_menu.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-client_menu.Tpo" -c -o openbox/openbox_openbox-client_menu.o `test -f 'openbox/client_menu.c' || echo '$(srcdir)/'`openbox/client_menu.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-client_menu.Tpo" "openbox/$(DEPDIR)/openbox_openbox-client_menu.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-client_menu.Tpo"; exit 1; fi
#	source='openbox/client_menu.c' object='openbox/openbox_openbox-client_menu.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-client_menu.o `test -f 'openbox/client_menu.c' || echo '$(srcdir)/'`openbox/client_menu.c

openbox/openbox_openbox-client_menu.obj: openbox/client_menu.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-client_menu.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-client_menu.Tpo" -c -o openbox/openbox_openbox-client_menu.obj `if test -f 'openbox/client_menu.c'; then $(CYGPATH_W) 'openbox/client_menu.c'; else $(CYGPATH_W) '$(srcdir)/openbox/client_menu.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-client_menu.Tpo" "openbox/$(DEPDIR)/openbox_openbox-client_menu.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-client_menu.Tpo"; exit 1; fi
#	source='openbox/client_menu.c' object='openbox/openbox_openbox-client_menu.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-client_menu.obj `if test -f 'openbox/client_menu.c'; then $(CYGPATH_W) 'openbox/client_menu.c'; else $(CYGPATH_W) '$(srcdir)/openbox/client_menu.c'; fi`

openbox/openbox_openbox-config.o: openbox/config.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-config.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-config.Tpo" -c -o openbox/openbox_openbox-config.o `test -f 'openbox/config.c' || echo '$(srcdir)/'`openbox/config.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-config.Tpo" "openbox/$(DEPDIR)/openbox_openbox-config.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-config.Tpo"; exit 1; fi
#	source='openbox/config.c' object='openbox/openbox_openbox-config.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-config.o `test -f 'openbox/config.c' || echo '$(srcdir)/'`openbox/config.c

openbox/openbox_openbox-config.obj: openbox/config.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-config.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-config.Tpo" -c -o openbox/openbox_openbox-config.obj `if test -f 'openbox/config.c'; then $(CYGPATH_W) 'openbox/config.c'; else $(CYGPATH_W) '$(srcdir)/openbox/config.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-config.Tpo" "openbox/$(DEPDIR)/openbox_openbox-config.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-config.Tpo"; exit 1; fi
#	source='openbox/config.c' object='openbox/openbox_openbox-config.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-config.obj `if test -f 'openbox/config.c'; then $(CYGPATH_W) 'openbox/config.c'; else $(CYGPATH_W) '$(srcdir)/openbox/config.c'; fi`

openbox/openbox_openbox-debug.o: openbox/debug.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-debug.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-debug.Tpo" -c -o openbox/openbox_openbox-debug.o `test -f 'openbox/debug.c' || echo '$(srcdir)/'`openbox/debug.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-debug.Tpo" "openbox/$(DEPDIR)/openbox_openbox-debug.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-debug.Tpo"; exit 1; fi
#	source='openbox/debug.c' object='openbox/openbox_openbox-debug.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-debug.o `test -f 'openbox/debug.c' || echo '$(srcdir)/'`openbox/debug.c

openbox/openbox_openbox-debug.obj: openbox/debug.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-debug.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-debug.Tpo" -c -o openbox/openbox_openbox-debug.obj `if test -f 'openbox/debug.c'; then $(CYGPATH_W) 'openbox/debug.c'; else $(CYGPATH_W) '$(srcdir)/openbox/debug.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-debug.Tpo" "openbox/$(DEPDIR)/openbox_openbox-debug.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-debug.Tpo"; exit 1; fi
#	source='openbox/debug.c' object='openbox/openbox_openbox-debug.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-debug.obj `if test -f 'openbox/debug.c'; then $(CYGPATH_W) 'openbox/debug.c'; else $(CYGPATH_W) '$(srcdir)/openbox/debug.c'; fi`

openbox/openbox_openbox-dock.o: openbox/dock.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-dock.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-dock.Tpo" -c -o openbox/openbox_openbox-dock.o `test -f 'openbox/dock.c' || echo '$(srcdir)/'`openbox/dock.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-dock.Tpo" "openbox/$(DEPDIR)/openbox_openbox-dock.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-dock.Tpo"; exit 1; fi
#	source='openbox/dock.c' object='openbox/openbox_openbox-dock.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-dock.o `test -f 'openbox/dock.c' || echo '$(srcdir)/'`openbox/dock.c

openbox/openbox_openbox-dock.obj: openbox/dock.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-dock.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-dock.Tpo" -c -o openbox/openbox_openbox-dock.obj `if test -f 'openbox/dock.c'; then $(CYGPATH_W) 'openbox/dock.c'; else $(CYGPATH_W) '$(srcdir)/openbox/dock.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-dock.Tpo" "openbox/$(DEPDIR)/openbox_openbox-dock.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-dock.Tpo"; exit 1; fi
#	source='openbox/dock.c' object='openbox/openbox_openbox-dock.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-dock.obj `if test -f 'openbox/dock.c'; then $(CYGPATH_W) 'openbox/dock.c'; else $(CYGPATH_W) '$(srcdir)/openbox/dock.c'; fi`

openbox/openbox_openbox-event.o: openbox/event.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-event.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-event.Tpo" -c -o openbox/openbox_openbox-event.o `test -f 'openbox/event.c' || echo '$(srcdir)/'`openbox/event.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-event.Tpo" "openbox/$(DEPDIR)/openbox_openbox-event.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-event.Tpo"; exit 1; fi
#	source='openbox/event.c' object='openbox/openbox_openbox-event.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-event.o `test -f 'openbox/event.c' || echo '$(srcdir)/'`openbox/event.c

openbox/openbox_openbox-event.obj: openbox/event.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-event.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-event.Tpo" -c -o openbox/openbox_openbox-event.obj `if test -f 'openbox/event.c'; then $(CYGPATH_W) 'openbox/event.c'; else $(CYGPATH_W) '$(srcdir)/openbox/event.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-event.Tpo" "openbox/$(DEPDIR)/openbox_openbox-event.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-event.Tpo"; exit 1; fi
#	source='openbox/event.c' object='openbox/openbox_openbox-event.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-event.obj `if test -f 'openbox/event.c'; then $(CYGPATH_W) 'openbox/event.c'; else $(CYGPATH_W) '$(srcdir)/openbox/event.c'; fi`

openbox/openbox_openbox-extensions.o: openbox/extensions.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-extensions.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-extensions.Tpo" -c -o openbox/openbox_openbox-extensions.o `test -f 'openbox/extensions.c' || echo '$(srcdir)/'`openbox/extensions.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-extensions.Tpo" "openbox/$(DEPDIR)/openbox_openbox-extensions.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-extensions.Tpo"; exit 1; fi
#	source='openbox/extensions.c' object='openbox/openbox_openbox-extensions.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-extensions.o `test -f 'openbox/extensions.c' || echo '$(srcdir)/'`openbox/extensions.c

openbox/openbox_openbox-extensions.obj: openbox/extensions.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-extensions.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-extensions.Tpo" -c -o openbox/openbox_openbox-extensions.obj `if test -f 'openbox/extensions.c'; then $(CYGPATH_W) 'openbox/extensions.c'; else $(CYGPATH_W) '$(srcdir)/openbox/extensions.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-extensions.Tpo" "openbox/$(DEPDIR)/openbox_openbox-extensions.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-extensions.Tpo"; exit 1; fi
#	source='openbox/extensions.c' object='openbox/openbox_openbox-extensions.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-extensions.obj `if test -f 'openbox/extensions.c'; then $(CYGPATH_W) 'openbox/extensions.c'; else $(CYGPATH_W) '$(srcdir)/openbox/extensions.c'; fi`

openbox/openbox_openbox-focus.o: openbox/focus.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-focus.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-focus.Tpo" -c -o openbox/openbox_openbox-focus.o `test -f 'openbox/focus.c' || echo '$(srcdir)/'`openbox/focus.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-focus.Tpo" "openbox/$(DEPDIR)/openbox_openbox-focus.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-focus.Tpo"; exit 1; fi
#	source='openbox/focus.c' object='openbox/openbox_openbox-focus.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-focus.o `test -f 'openbox/focus.c' || echo '$(srcdir)/'`openbox/focus.c

openbox/openbox_openbox-focus.obj: openbox/focus.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-focus.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-focus.Tpo" -c -o openbox/openbox_openbox-focus.obj `if test -f 'openbox/focus.c'; then $(CYGPATH_W) 'openbox/focus.c'; else $(CYGPATH_W) '$(srcdir)/openbox/focus.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-focus.Tpo" "openbox/$(DEPDIR)/openbox_openbox-focus.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-focus.Tpo"; exit 1; fi
#	source='openbox/focus.c' object='openbox/openbox_openbox-focus.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-focus.obj `if test -f 'openbox/focus.c'; then $(CYGPATH_W) 'openbox/focus.c'; else $(CYGPATH_W) '$(srcdir)/openbox/focus.c'; fi`

openbox/openbox_openbox-focus_cycle.o: openbox/focus_cycle.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-focus_cycle.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-focus_cycle.Tpo" -c -o openbox/openbox_openbox-focus_cycle.o `test -f 'openbox/focus_cycle.c' || echo '$(srcdir)/'`openbox/focus_cycle.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle.Tpo" "openbox/$(DEPDIR)/openbox_openbox-focus_cycle.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle.Tpo"; exit 1; fi
#	source='openbox/focus_cycle.c' object='openbox/openbox_openbox-focus_cycle.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-focus_cycle.o `test -f 'openbox/focus_cycle.c' || echo '$(srcdir)/'`openbox/focus_cycle.c

openbox/openbox_openbox-focus_cycle.obj: openbox/focus_cycle.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-focus_cycle.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-focus_cycle.Tpo" -c -o openbox/openbox_openbox-focus_cycle.obj `if test -f 'openbox/focus_cycle.c'; then $(CYGPATH_W) 'openbox/focus_cycle.c'; else $(CYGPATH_W) '$(srcdir)/openbox/focus_cycle.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle.Tpo" "openbox/$(DEPDIR)/openbox_openbox-focus_cycle.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle.Tpo"; exit 1; fi
#	source='openbox/focus_cycle.c' object='openbox/openbox_openbox-focus_cycle.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-focus_cycle.obj `if test -f 'openbox/focus_cycle.c'; then $(CYGPATH_W) 'openbox/focus_cycle.c'; else $(CYGPATH_W) '$(srcdir)/openbox/focus_cycle.c'; fi`

openbox/openbox_openbox-focus_cycle_indicator.o: openbox/focus_cycle_indicator.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-focus_cycle_indicator.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_indicator.Tpo" -c -o openbox/openbox_openbox-focus_cycle_indicator.o `test -f 'openbox/focus_cycle_indicator.c' || echo '$(srcdir)/'`openbox/focus_cycle_indicator.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_indicator.Tpo" "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_indicator.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_indicator.Tpo"; exit 1; fi
#	source='openbox/focus_cycle_indicator.c' object='openbox/openbox_openbox-focus_cycle_indicator.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-focus_cycle_indicator.o `test -f 'openbox/focus_cycle_indicator.c' || echo '$(srcdir)/'`openbox/focus_cycle_indicator.c

openbox/openbox_openbox-focus_cycle_indicator.obj: openbox/focus_cycle_indicator.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-focus_cycle_indicator.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_indicator.Tpo" -c -o openbox/openbox_openbox-focus_cycle_indicator.obj `if test -f 'openbox/focus_cycle_indicator.c'; then $(CYGPATH_W) 'openbox/focus_cycle_indicator.c'; else $(CYGPATH_W) '$(srcdir)/openbox/focus_cycle_indicator.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_indicator.Tpo" "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_indicator.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_indicator.Tpo"; exit 1; fi
#	source='openbox/focus_cycle_indicator.c' object='openbox/openbox_openbox-focus_cycle_indicator.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-focus_cycle_indicator.obj `if test -f 'openbox/focus_cycle_indicator.c'; then $(CYGPATH_W) 'openbox/focus_cycle_indicator.c'; else $(CYGPATH_W) '$(srcdir)/openbox/focus_cycle_indicator.c'; fi`

openbox/openbox_openbox-focus_cycle_popup.o: openbox/focus_cycle_popup.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-focus_cycle_popup.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_popup.Tpo" -c -o openbox/openbox_openbox-focus_cycle_popup.o `test -f 'openbox/focus_cycle_popup.c' || echo '$(srcdir)/'`openbox/focus_cycle_popup.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_popup.Tpo" "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_popup.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_popup.Tpo"; exit 1; fi
#	source='openbox/focus_cycle_popup.c' object='openbox/openbox_openbox-focus_cycle_popup.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-focus_cycle_popup.o `test -f 'openbox/focus_cycle_popup.c' || echo '$(srcdir)/'`openbox/focus_cycle_popup.c

openbox/openbox_openbox-focus_cycle_popup.obj: openbox/focus_cycle_popup.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-focus_cycle_popup.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_popup.Tpo" -c -o openbox/openbox_openbox-focus_cycle_popup.obj `if test -f 'openbox/focus_cycle_popup.c'; then $(CYGPATH_W) 'openbox/focus_cycle_popup.c'; else $(CYGPATH_W) '$(srcdir)/openbox/focus_cycle_popup.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_popup.Tpo" "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_popup.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-focus_cycle_popup.Tpo"; exit 1; fi
#	source='openbox/focus_cycle_popup.c' object='openbox/openbox_openbox-focus_cycle_popup.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-focus_cycle_popup.obj `if test -f 'openbox/focus_cycle_popup.c'; then $(CYGPATH_W) 'openbox/focus_cycle_popup.c'; else $(CYGPATH_W) '$(srcdir)/openbox/focus_cycle_popup.c'; fi`

openbox/openbox_openbox-frame.o: openbox/frame.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-frame.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-frame.Tpo" -c -o openbox/openbox_openbox-frame.o `test -f 'openbox/frame.c' || echo '$(srcdir)/'`openbox/frame.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-frame.Tpo" "openbox/$(DEPDIR)/openbox_openbox-frame.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-frame.Tpo"; exit 1; fi
#	source='openbox/frame.c' object='openbox/openbox_openbox-frame.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-frame.o `test -f 'openbox/frame.c' || echo '$(srcdir)/'`openbox/frame.c

openbox/openbox_openbox-frame.obj: openbox/frame.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-frame.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-frame.Tpo" -c -o openbox/openbox_openbox-frame.obj `if test -f 'openbox/frame.c'; then $(CYGPATH_W) 'openbox/frame.c'; else $(CYGPATH_W) '$(srcdir)/openbox/frame.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-frame.Tpo" "openbox/$(DEPDIR)/openbox_openbox-frame.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-frame.Tpo"; exit 1; fi
#	source='openbox/frame.c' object='openbox/openbox_openbox-frame.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-frame.obj `if test -f 'openbox/frame.c'; then $(CYGPATH_W) 'openbox/frame.c'; else $(CYGPATH_W) '$(srcdir)/openbox/frame.c'; fi`

openbox/openbox_openbox-framerender.o: openbox/framerender.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-framerender.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-framerender.Tpo" -c -o openbox/openbox_openbox-framerender.o `test -f 'openbox/framerender.c' || echo '$(srcdir)/'`openbox/framerender.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-framerender.Tpo" "openbox/$(DEPDIR)/openbox_openbox-framerender.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-framerender.Tpo"; exit 1; fi
#	source='openbox/framerender.c' object='openbox/openbox_openbox-framerender.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-framerender.o `test -f 'openbox/framerender.c' || echo '$(srcdir)/'`openbox/framerender.c

openbox/openbox_openbox-framerender.obj: openbox/framerender.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-framerender.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-framerender.Tpo" -c -o openbox/openbox_openbox-framerender.obj `if test -f 'openbox/framerender.c'; then $(CYGPATH_W) 'openbox/framerender.c'; else $(CYGPATH_W) '$(srcdir)/openbox/framerender.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-framerender.Tpo" "openbox/$(DEPDIR)/openbox_openbox-framerender.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-framerender.Tpo"; exit 1; fi
#	source='openbox/framerender.c' object='openbox/openbox_openbox-framerender.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-framerender.obj `if test -f 'openbox/framerender.c'; then $(CYGPATH_W) 'openbox/framerender.c'; else $(CYGPATH_W) '$(srcdir)/openbox/framerender.c'; fi`

openbox/openbox_openbox-grab.o: openbox/grab.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-grab.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-grab.Tpo" -c -o openbox/openbox_openbox-grab.o `test -f 'openbox/grab.c' || echo '$(srcdir)/'`openbox/grab.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-grab.Tpo" "openbox/$(DEPDIR)/openbox_openbox-grab.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-grab.Tpo"; exit 1; fi
#	source='openbox/grab.c' object='openbox/openbox_openbox-grab.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-grab.o `test -f 'openbox/grab.c' || echo '$(srcdir)/'`openbox/grab.c

openbox/openbox_openbox-grab.obj: openbox/grab.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-grab.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-grab.Tpo" -c -o openbox/openbox_openbox-grab.obj `if test -f 'openbox/grab.c'; then $(CYGPATH_W) 'openbox/grab.c'; else $(CYGPATH_W) '$(srcdir)/openbox/grab.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-grab.Tpo" "openbox/$(DEPDIR)/openbox_openbox-grab.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-grab.Tpo"; exit 1; fi
#	source='openbox/grab.c' object='openbox/openbox_openbox-grab.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-grab.obj `if test -f 'openbox/grab.c'; then $(CYGPATH_W) 'openbox/grab.c'; else $(CYGPATH_W) '$(srcdir)/openbox/grab.c'; fi`

openbox/openbox_openbox-group.o: openbox/group.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-group.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-group.Tpo" -c -o openbox/openbox_openbox-group.o `test -f 'openbox/group.c' || echo '$(srcdir)/'`openbox/group.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-group.Tpo" "openbox/$(DEPDIR)/openbox_openbox-group.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-group.Tpo"; exit 1; fi
#	source='openbox/group.c' object='openbox/openbox_openbox-group.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-group.o `test -f 'openbox/group.c' || echo '$(srcdir)/'`openbox/group.c

openbox/openbox_openbox-group.obj: openbox/group.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-group.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-group.Tpo" -c -o openbox/openbox_openbox-group.obj `if test -f 'openbox/group.c'; then $(CYGPATH_W) 'openbox/group.c'; else $(CYGPATH_W) '$(srcdir)/openbox/group.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-group.Tpo" "openbox/$(DEPDIR)/openbox_openbox-group.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-group.Tpo"; exit 1; fi
#	source='openbox/group.c' object='openbox/openbox_openbox-group.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-group.obj `if test -f 'openbox/group.c'; then $(CYGPATH_W) 'openbox/group.c'; else $(CYGPATH_W) '$(srcdir)/openbox/group.c'; fi`

openbox/openbox_openbox-keyboard.o: openbox/keyboard.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-keyboard.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-keyboard.Tpo" -c -o openbox/openbox_openbox-keyboard.o `test -f 'openbox/keyboard.c' || echo '$(srcdir)/'`openbox/keyboard.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-keyboard.Tpo" "openbox/$(DEPDIR)/openbox_openbox-keyboard.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-keyboard.Tpo"; exit 1; fi
#	source='openbox/keyboard.c' object='openbox/openbox_openbox-keyboard.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-keyboard.o `test -f 'openbox/keyboard.c' || echo '$(srcdir)/'`openbox/keyboard.c

openbox/openbox_openbox-keyboard.obj: openbox/keyboard.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-keyboard.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-keyboard.Tpo" -c -o openbox/openbox_openbox-keyboard.obj `if test -f 'openbox/keyboard.c'; then $(CYGPATH_W) 'openbox/keyboard.c'; else $(CYGPATH_W) '$(srcdir)/openbox/keyboard.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-keyboard.Tpo" "openbox/$(DEPDIR)/openbox_openbox-keyboard.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-keyboard.Tpo"; exit 1; fi
#	source='openbox/keyboard.c' object='openbox/openbox_openbox-keyboard.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-keyboard.obj `if test -f 'openbox/keyboard.c'; then $(CYGPATH_W) 'openbox/keyboard.c'; else $(CYGPATH_W) '$(srcdir)/openbox/keyboard.c'; fi`

openbox/openbox_openbox-keytree.o: openbox/keytree.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-keytree.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-keytree.Tpo" -c -o openbox/openbox_openbox-keytree.o `test -f 'openbox/keytree.c' || echo '$(srcdir)/'`openbox/keytree.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-keytree.Tpo" "openbox/$(DEPDIR)/openbox_openbox-keytree.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-keytree.Tpo"; exit 1; fi
#	source='openbox/keytree.c' object='openbox/openbox_openbox-keytree.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-keytree.o `test -f 'openbox/keytree.c' || echo '$(srcdir)/'`openbox/keytree.c

openbox/openbox_openbox-keytree.obj: openbox/keytree.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-keytree.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-keytree.Tpo" -c -o openbox/openbox_openbox-keytree.obj `if test -f 'openbox/keytree.c'; then $(CYGPATH_W) 'openbox/keytree.c'; else $(CYGPATH_W) '$(srcdir)/openbox/keytree.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-keytree.Tpo" "openbox/$(DEPDIR)/openbox_openbox-keytree.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-keytree.Tpo"; exit 1; fi
#	source='openbox/keytree.c' object='openbox/openbox_openbox-keytree.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-keytree.obj `if test -f 'openbox/keytree.c'; then $(CYGPATH_W) 'openbox/keytree.c'; else $(CYGPATH_W) '$(srcdir)/openbox/keytree.c'; fi`

openbox/openbox_openbox-mainloop.o: openbox/mainloop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-mainloop.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-mainloop.Tpo" -c -o openbox/openbox_openbox-mainloop.o `test -f 'openbox/mainloop.c' || echo '$(srcdir)/'`openbox/mainloop.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-mainloop.Tpo" "openbox/$(DEPDIR)/openbox_openbox-mainloop.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-mainloop.Tpo"; exit 1; fi
#	source='openbox/mainloop.c' object='openbox/openbox_openbox-mainloop.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-mainloop.o `test -f 'openbox/mainloop.c' || echo '$(srcdir)/'`openbox/mainloop.c

openbox/openbox_openbox-mainloop.obj: openbox/mainloop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-mainloop.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-mainloop.Tpo" -c -o openbox/openbox_openbox-mainloop.obj `if test -f 'openbox/mainloop.c'; then $(CYGPATH_W) 'openbox/mainloop.c'; else $(CYGPATH_W) '$(srcdir)/openbox/mainloop.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-mainloop.Tpo" "openbox/$(DEPDIR)/openbox_openbox-mainloop.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-mainloop.Tpo"; exit 1; fi
#	source='openbox/mainloop.c' object='openbox/openbox_openbox-mainloop.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-mainloop.obj `if test -f 'openbox/mainloop.c'; then $(CYGPATH_W) 'openbox/mainloop.c'; else $(CYGPATH_W) '$(srcdir)/openbox/mainloop.c'; fi`

openbox/openbox_openbox-menuframe.o: openbox/menuframe.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-menuframe.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-menuframe.Tpo" -c -o openbox/openbox_openbox-menuframe.o `test -f 'openbox/menuframe.c' || echo '$(srcdir)/'`openbox/menuframe.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-menuframe.Tpo" "openbox/$(DEPDIR)/openbox_openbox-menuframe.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-menuframe.Tpo"; exit 1; fi
#	source='openbox/menuframe.c' object='openbox/openbox_openbox-menuframe.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-menuframe.o `test -f 'openbox/menuframe.c' || echo '$(srcdir)/'`openbox/menuframe.c

openbox/openbox_openbox-menuframe.obj: openbox/menuframe.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-menuframe.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-menuframe.Tpo" -c -o openbox/openbox_openbox-menuframe.obj `if test -f 'openbox/menuframe.c'; then $(CYGPATH_W) 'openbox/menuframe.c'; else $(CYGPATH_W) '$(srcdir)/openbox/menuframe.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-menuframe.Tpo" "openbox/$(DEPDIR)/openbox_openbox-menuframe.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-menuframe.Tpo"; exit 1; fi
#	source='openbox/menuframe.c' object='openbox/openbox_openbox-menuframe.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-menuframe.obj `if test -f 'openbox/menuframe.c'; then $(CYGPATH_W) 'openbox/menuframe.c'; else $(CYGPATH_W) '$(srcdir)/openbox/menuframe.c'; fi`

openbox/openbox_openbox-menu.o: openbox/menu.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-menu.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-menu.Tpo" -c -o openbox/openbox_openbox-menu.o `test -f 'openbox/menu.c' || echo '$(srcdir)/'`openbox/menu.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-menu.Tpo" "openbox/$(DEPDIR)/openbox_openbox-menu.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-menu.Tpo"; exit 1; fi
#	source='openbox/menu.c' object='openbox/openbox_openbox-menu.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-menu.o `test -f 'openbox/menu.c' || echo '$(srcdir)/'`openbox/menu.c

openbox/openbox_openbox-menu.obj: openbox/menu.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-menu.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-menu.Tpo" -c -o openbox/openbox_openbox-menu.obj `if test -f 'openbox/menu.c'; then $(CYGPATH_W) 'openbox/menu.c'; else $(CYGPATH_W) '$(srcdir)/openbox/menu.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-menu.Tpo" "openbox/$(DEPDIR)/openbox_openbox-menu.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-menu.Tpo"; exit 1; fi
#	source='openbox/menu.c' object='openbox/openbox_openbox-menu.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-menu.obj `if test -f 'openbox/menu.c'; then $(CYGPATH_W) 'openbox/menu.c'; else $(CYGPATH_W) '$(srcdir)/openbox/menu.c'; fi`

openbox/openbox_openbox-modkeys.o: openbox/modkeys.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-modkeys.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-modkeys.Tpo" -c -o openbox/openbox_openbox-modkeys.o `test -f 'openbox/modkeys.c' || echo '$(srcdir)/'`openbox/modkeys.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-modkeys.Tpo" "openbox/$(DEPDIR)/openbox_openbox-modkeys.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-modkeys.Tpo"; exit 1; fi
#	source='openbox/modkeys.c' object='openbox/openbox_openbox-modkeys.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-modkeys.o `test -f 'openbox/modkeys.c' || echo '$(srcdir)/'`openbox/modkeys.c

openbox/openbox_openbox-modkeys.obj: openbox/modkeys.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-modkeys.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-modkeys.Tpo" -c -o openbox/openbox_openbox-modkeys.obj `if test -f 'openbox/modkeys.c'; then $(CYGPATH_W) 'openbox/modkeys.c'; else $(CYGPATH_W) '$(srcdir)/openbox/modkeys.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-modkeys.Tpo" "openbox/$(DEPDIR)/openbox_openbox-modkeys.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-modkeys.Tpo"; exit 1; fi
#	source='openbox/modkeys.c' object='openbox/openbox_openbox-modkeys.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-modkeys.obj `if test -f 'openbox/modkeys.c'; then $(CYGPATH_W) 'openbox/modkeys.c'; else $(CYGPATH_W) '$(srcdir)/openbox/modkeys.c'; fi`

openbox/openbox_openbox-mouse.o: openbox/mouse.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-mouse.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-mouse.Tpo" -c -o openbox/openbox_openbox-mouse.o `test -f 'openbox/mouse.c' || echo '$(srcdir)/'`openbox/mouse.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-mouse.Tpo" "openbox/$(DEPDIR)/openbox_openbox-mouse.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-mouse.Tpo"; exit 1; fi
#	source='openbox/mouse.c' object='openbox/openbox_openbox-mouse.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-mouse.o `test -f 'openbox/mouse.c' || echo '$(srcdir)/'`openbox/mouse.c

openbox/openbox_openbox-mouse.obj: openbox/mouse.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-mouse.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-mouse.Tpo" -c -o openbox/openbox_openbox-mouse.obj `if test -f 'openbox/mouse.c'; then $(CYGPATH_W) 'openbox/mouse.c'; else $(CYGPATH_W) '$(srcdir)/openbox/mouse.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-mouse.Tpo" "openbox/$(DEPDIR)/openbox_openbox-mouse.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-mouse.Tpo"; exit 1; fi
#	source='openbox/mouse.c' object='openbox/openbox_openbox-mouse.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-mouse.obj `if test -f 'openbox/mouse.c'; then $(CYGPATH_W) 'openbox/mouse.c'; else $(CYGPATH_W) '$(srcdir)/openbox/mouse.c'; fi`

openbox/openbox_openbox-moveresize.o: openbox/moveresize.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-moveresize.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-moveresize.Tpo" -c -o openbox/openbox_openbox-moveresize.o `test -f 'openbox/moveresize.c' || echo '$(srcdir)/'`openbox/moveresize.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-moveresize.Tpo" "openbox/$(DEPDIR)/openbox_openbox-moveresize.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-moveresize.Tpo"; exit 1; fi
#	source='openbox/moveresize.c' object='openbox/openbox_openbox-moveresize.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-moveresize.o `test -f 'openbox/moveresize.c' || echo '$(srcdir)/'`openbox/moveresize.c

openbox/openbox_openbox-moveresize.obj: openbox/moveresize.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-moveresize.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-moveresize.Tpo" -c -o openbox/openbox_openbox-moveresize.obj `if test -f 'openbox/moveresize.c'; then $(CYGPATH_W) 'openbox/moveresize.c'; else $(CYGPATH_W) '$(srcdir)/openbox/moveresize.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-moveresize.Tpo" "openbox/$(DEPDIR)/openbox_openbox-moveresize.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-moveresize.Tpo"; exit 1; fi
#	source='openbox/moveresize.c' object='openbox/openbox_openbox-moveresize.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-moveresize.obj `if test -f 'openbox/moveresize.c'; then $(CYGPATH_W) 'openbox/moveresize.c'; else $(CYGPATH_W) '$(srcdir)/openbox/moveresize.c'; fi`

openbox/openbox_openbox-openbox.o: openbox/openbox.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-openbox.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-openbox.Tpo" -c -o openbox/openbox_openbox-openbox.o `test -f 'openbox/openbox.c' || echo '$(srcdir)/'`openbox/openbox.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-openbox.Tpo" "openbox/$(DEPDIR)/openbox_openbox-openbox.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-openbox.Tpo"; exit 1; fi
#	source='openbox/openbox.c' object='openbox/openbox_openbox-openbox.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-openbox.o `test -f 'openbox/openbox.c' || echo '$(srcdir)/'`openbox/openbox.c

openbox/openbox_openbox-openbox.obj: openbox/openbox.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-openbox.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-openbox.Tpo" -c -o openbox/openbox_openbox-openbox.obj `if test -f 'openbox/openbox.c'; then $(CYGPATH_W) 'openbox/openbox.c'; else $(CYGPATH_W) '$(srcdir)/openbox/openbox.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-openbox.Tpo" "openbox/$(DEPDIR)/openbox_openbox-openbox.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-openbox.Tpo"; exit 1; fi
#	source='openbox/openbox.c' object='openbox/openbox_openbox-openbox.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-openbox.obj `if test -f 'openbox/openbox.c'; then $(CYGPATH_W) 'openbox/openbox.c'; else $(CYGPATH_W) '$(srcdir)/openbox/openbox.c'; fi`

openbox/openbox_openbox-ping.o: openbox/ping.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-ping.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-ping.Tpo" -c -o openbox/openbox_openbox-ping.o `test -f 'openbox/ping.c' || echo '$(srcdir)/'`openbox/ping.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-ping.Tpo" "openbox/$(DEPDIR)/openbox_openbox-ping.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-ping.Tpo"; exit 1; fi
#	source='openbox/ping.c' object='openbox/openbox_openbox-ping.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-ping.o `test -f 'openbox/ping.c' || echo '$(srcdir)/'`openbox/ping.c

openbox/openbox_openbox-ping.obj: openbox/ping.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-ping.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-ping.Tpo" -c -o openbox/openbox_openbox-ping.obj `if test -f 'openbox/ping.c'; then $(CYGPATH_W) 'openbox/ping.c'; else $(CYGPATH_W) '$(srcdir)/openbox/ping.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-ping.Tpo" "openbox/$(DEPDIR)/openbox_openbox-ping.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-ping.Tpo"; exit 1; fi
#	source='openbox/ping.c' object='openbox/openbox_openbox-ping.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-ping.obj `if test -f 'openbox/ping.c'; then $(CYGPATH_W) 'openbox/ping.c'; else $(CYGPATH_W) '$(srcdir)/openbox/ping.c'; fi`

openbox/openbox_openbox-place.o: openbox/place.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-place.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-place.Tpo" -c -o openbox/openbox_openbox-place.o `test -f 'openbox/place.c' || echo '$(srcdir)/'`openbox/place.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-place.Tpo" "openbox/$(DEPDIR)/openbox_openbox-place.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-place.Tpo"; exit 1; fi
#	source='openbox/place.c' object='openbox/openbox_openbox-place.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-place.o `test -f 'openbox/place.c' || echo '$(srcdir)/'`openbox/place.c

openbox/openbox_openbox-place.obj: openbox/place.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-place.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-place.Tpo" -c -o openbox/openbox_openbox-place.obj `if test -f 'openbox/place.c'; then $(CYGPATH_W) 'openbox/place.c'; else $(CYGPATH_W) '$(srcdir)/openbox/place.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-place.Tpo" "openbox/$(DEPDIR)/openbox_openbox-place.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-place.Tpo"; exit 1; fi
#	source='openbox/place.c' object='openbox/openbox_openbox-place.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-place.obj `if test -f 'openbox/place.c'; then $(CYGPATH_W) 'openbox/place.c'; else $(CYGPATH_W) '$(srcdir)/openbox/place.c'; fi`

openbox/openbox_openbox-prompt.o: openbox/prompt.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-prompt.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-prompt.Tpo" -c -o openbox/openbox_openbox-prompt.o `test -f 'openbox/prompt.c' || echo '$(srcdir)/'`openbox/prompt.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-prompt.Tpo" "openbox/$(DEPDIR)/openbox_openbox-prompt.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-prompt.Tpo"; exit 1; fi
#	source='openbox/prompt.c' object='openbox/openbox_openbox-prompt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-prompt.o `test -f 'openbox/prompt.c' || echo '$(srcdir)/'`openbox/prompt.c

openbox/openbox_openbox-prompt.obj: openbox/prompt.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-prompt.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-prompt.Tpo" -c -o openbox/openbox_openbox-prompt.obj `if test -f 'openbox/prompt.c'; then $(CYGPATH_W) 'openbox/prompt.c'; else $(CYGPATH_W) '$(srcdir)/openbox/prompt.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-prompt.Tpo" "openbox/$(DEPDIR)/openbox_openbox-prompt.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-prompt.Tpo"; exit 1; fi
#	source='openbox/prompt.c' object='openbox/openbox_openbox-prompt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-prompt.obj `if test -f 'openbox/prompt.c'; then $(CYGPATH_W) 'openbox/prompt.c'; else $(CYGPATH_W) '$(srcdir)/openbox/prompt.c'; fi`

openbox/openbox_openbox-popup.o: openbox/popup.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-popup.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-popup.Tpo" -c -o openbox/openbox_openbox-popup.o `test -f 'openbox/popup.c' || echo '$(srcdir)/'`openbox/popup.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-popup.Tpo" "openbox/$(DEPDIR)/openbox_openbox-popup.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-popup.Tpo"; exit 1; fi
#	source='openbox/popup.c' object='openbox/openbox_openbox-popup.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-popup.o `test -f 'openbox/popup.c' || echo '$(srcdir)/'`openbox/popup.c

openbox/openbox_openbox-popup.obj: openbox/popup.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-popup.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-popup.Tpo" -c -o openbox/openbox_openbox-popup.obj `if test -f 'openbox/popup.c'; then $(CYGPATH_W) 'openbox/popup.c'; else $(CYGPATH_W) '$(srcdir)/openbox/popup.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-popup.Tpo" "openbox/$(DEPDIR)/openbox_openbox-popup.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-popup.Tpo"; exit 1; fi
#	source='openbox/popup.c' object='openbox/openbox_openbox-popup.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-popup.obj `if test -f 'openbox/popup.c'; then $(CYGPATH_W) 'openbox/popup.c'; else $(CYGPATH_W) '$(srcdir)/openbox/popup.c'; fi`

openbox/openbox_openbox-prop.o: openbox/prop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-prop.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-prop.Tpo" -c -o openbox/openbox_openbox-prop.o `test -f 'openbox/prop.c' || echo '$(srcdir)/'`openbox/prop.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-prop.Tpo" "openbox/$(DEPDIR)/openbox_openbox-prop.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-prop.Tpo"; exit 1; fi
#	source='openbox/prop.c' object='openbox/openbox_openbox-prop.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-prop.o `test -f 'openbox/prop.c' || echo '$(srcdir)/'`openbox/prop.c

openbox/openbox_openbox-prop.obj: openbox/prop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-prop.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-prop.Tpo" -c -o openbox/openbox_openbox-prop.obj `if test -f 'openbox/prop.c'; then $(CYGPATH_W) 'openbox/prop.c'; else $(CYGPATH_W) '$(srcdir)/openbox/prop.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-prop.Tpo" "openbox/$(DEPDIR)/openbox_openbox-prop.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-prop.Tpo"; exit 1; fi
#	source='openbox/prop.c' object='openbox/openbox_openbox-prop.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-prop.obj `if test -f 'openbox/prop.c'; then $(CYGPATH_W) 'openbox/prop.c'; else $(CYGPATH_W) '$(srcdir)/openbox/prop.c'; fi`

openbox/openbox_openbox-resist.o: openbox/resist.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-resist.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-resist.Tpo" -c -o openbox/openbox_openbox-resist.o `test -f 'openbox/resist.c' || echo '$(srcdir)/'`openbox/resist.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-resist.Tpo" "openbox/$(DEPDIR)/openbox_openbox-resist.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-resist.Tpo"; exit 1; fi
#	source='openbox/resist.c' object='openbox/openbox_openbox-resist.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-resist.o `test -f 'openbox/resist.c' || echo '$(srcdir)/'`openbox/resist.c

openbox/openbox_openbox-resist.obj: openbox/resist.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-resist.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-resist.Tpo" -c -o openbox/openbox_openbox-resist.obj `if test -f 'openbox/resist.c'; then $(CYGPATH_W) 'openbox/resist.c'; else $(CYGPATH_W) '$(srcdir)/openbox/resist.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-resist.Tpo" "openbox/$(DEPDIR)/openbox_openbox-resist.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-resist.Tpo"; exit 1; fi
#	source='openbox/resist.c' object='openbox/openbox_openbox-resist.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-resist.obj `if test -f 'openbox/resist.c'; then $(CYGPATH_W) 'openbox/resist.c'; else $(CYGPATH_W) '$(srcdir)/openbox/resist.c'; fi`

openbox/openbox_openbox-screen.o: openbox/screen.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-screen.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-screen.Tpo" -c -o openbox/openbox_openbox-screen.o `test -f 'openbox/screen.c' || echo '$(srcdir)/'`openbox/screen.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-screen.Tpo" "openbox/$(DEPDIR)/openbox_openbox-screen.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-screen.Tpo"; exit 1; fi
#	source='openbox/screen.c' object='openbox/openbox_openbox-screen.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-screen.o `test -f 'openbox/screen.c' || echo '$(srcdir)/'`openbox/screen.c

openbox/openbox_openbox-screen.obj: openbox/screen.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-screen.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-screen.Tpo" -c -o openbox/openbox_openbox-screen.obj `if test -f 'openbox/screen.c'; then $(CYGPATH_W) 'openbox/screen.c'; else $(CYGPATH_W) '$(srcdir)/openbox/screen.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-screen.Tpo" "openbox/$(DEPDIR)/openbox_openbox-screen.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-screen.Tpo"; exit 1; fi
#	source='openbox/screen.c' object='openbox/openbox_openbox-screen.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-screen.obj `if test -f 'openbox/screen.c'; then $(CYGPATH_W) 'openbox/screen.c'; else $(CYGPATH_W) '$(srcdir)/openbox/screen.c'; fi`

openbox/openbox_openbox-session.o: openbox/session.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-session.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-session.Tpo" -c -o openbox/openbox_openbox-session.o `test -f 'openbox/session.c' || echo '$(srcdir)/'`openbox/session.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-session.Tpo" "openbox/$(DEPDIR)/openbox_openbox-session.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-session.Tpo"; exit 1; fi
#	source='openbox/session.c' object='openbox/openbox_openbox-session.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-session.o `test -f 'openbox/session.c' || echo '$(srcdir)/'`openbox/session.c

openbox/openbox_openbox-session.obj: openbox/session.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-session.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-session.Tpo" -c -o openbox/openbox_openbox-session.obj `if test -f 'openbox/session.c'; then $(CYGPATH_W) 'openbox/session.c'; else $(CYGPATH_W) '$(srcdir)/openbox/session.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-session.Tpo" "openbox/$(DEPDIR)/openbox_openbox-session.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-session.Tpo"; exit 1; fi
#	source='openbox/session.c' object='openbox/openbox_openbox-session.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-session.obj `if test -f 'openbox/session.c'; then $(CYGPATH_W) 'openbox/session.c'; else $(CYGPATH_W) '$(srcdir)/openbox/session.c'; fi`

openbox/openbox_openbox-stacking.o: openbox/stacking.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-stacking.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-stacking.Tpo" -c -o openbox/openbox_openbox-stacking.o `test -f 'openbox/stacking.c' || echo '$(srcdir)/'`openbox/stacking.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-stacking.Tpo" "openbox/$(DEPDIR)/openbox_openbox-stacking.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-stacking.Tpo"; exit 1; fi
#	source='openbox/stacking.c' object='openbox/openbox_openbox-stacking.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-stacking.o `test -f 'openbox/stacking.c' || echo '$(srcdir)/'`openbox/stacking.c

openbox/openbox_openbox-stacking.obj: openbox/stacking.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-stacking.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-stacking.Tpo" -c -o openbox/openbox_openbox-stacking.obj `if test -f 'openbox/stacking.c'; then $(CYGPATH_W) 'openbox/stacking.c'; else $(CYGPATH_W) '$(srcdir)/openbox/stacking.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-stacking.Tpo" "openbox/$(DEPDIR)/openbox_openbox-stacking.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-stacking.Tpo"; exit 1; fi
#	source='openbox/stacking.c' object='openbox/openbox_openbox-stacking.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-stacking.obj `if test -f 'openbox/stacking.c'; then $(CYGPATH_W) 'openbox/stacking.c'; else $(CYGPATH_W) '$(srcdir)/openbox/stacking.c'; fi`

openbox/openbox_openbox-startupnotify.o: openbox/startupnotify.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-startupnotify.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-startupnotify.Tpo" -c -o openbox/openbox_openbox-startupnotify.o `test -f 'openbox/startupnotify.c' || echo '$(srcdir)/'`openbox/startupnotify.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-startupnotify.Tpo" "openbox/$(DEPDIR)/openbox_openbox-startupnotify.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-startupnotify.Tpo"; exit 1; fi
#	source='openbox/startupnotify.c' object='openbox/openbox_openbox-startupnotify.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-startupnotify.o `test -f 'openbox/startupnotify.c' || echo '$(srcdir)/'`openbox/startupnotify.c

openbox/openbox_openbox-startupnotify.obj: openbox/startupnotify.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-startupnotify.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-startupnotify.Tpo" -c -o openbox/openbox_openbox-startupnotify.obj `if test -f 'openbox/startupnotify.c'; then $(CYGPATH_W) 'openbox/startupnotify.c'; else $(CYGPATH_W) '$(srcdir)/openbox/startupnotify.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-startupnotify.Tpo" "openbox/$(DEPDIR)/openbox_openbox-startupnotify.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-startupnotify.Tpo"; exit 1; fi
#	source='openbox/startupnotify.c' object='openbox/openbox_openbox-startupnotify.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-startupnotify.obj `if test -f 'openbox/startupnotify.c'; then $(CYGPATH_W) 'openbox/startupnotify.c'; else $(CYGPATH_W) '$(srcdir)/openbox/startupnotify.c'; fi`

openbox/openbox_openbox-translate.o: openbox/translate.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-translate.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-translate.Tpo" -c -o openbox/openbox_openbox-translate.o `test -f 'openbox/translate.c' || echo '$(srcdir)/'`openbox/translate.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-translate.Tpo" "openbox/$(DEPDIR)/openbox_openbox-translate.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-translate.Tpo"; exit 1; fi
#	source='openbox/translate.c' object='openbox/openbox_openbox-translate.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-translate.o `test -f 'openbox/translate.c' || echo '$(srcdir)/'`openbox/translate.c

openbox/openbox_openbox-translate.obj: openbox/translate.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-translate.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-translate.Tpo" -c -o openbox/openbox_openbox-translate.obj `if test -f 'openbox/translate.c'; then $(CYGPATH_W) 'openbox/translate.c'; else $(CYGPATH_W) '$(srcdir)/openbox/translate.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-translate.Tpo" "openbox/$(DEPDIR)/openbox_openbox-translate.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-translate.Tpo"; exit 1; fi
#	source='openbox/translate.c' object='openbox/openbox_openbox-translate.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-translate.obj `if test -f 'openbox/translate.c'; then $(CYGPATH_W) 'openbox/translate.c'; else $(CYGPATH_W) '$(srcdir)/openbox/translate.c'; fi`

openbox/openbox_openbox-window.o: openbox/window.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-window.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-window.Tpo" -c -o openbox/openbox_openbox-window.o `test -f 'openbox/window.c' || echo '$(srcdir)/'`openbox/window.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-window.Tpo" "openbox/$(DEPDIR)/openbox_openbox-window.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-window.Tpo"; exit 1; fi
#	source='openbox/window.c' object='openbox/openbox_openbox-window.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-window.o `test -f 'openbox/window.c' || echo '$(srcdir)/'`openbox/window.c

openbox/openbox_openbox-window.obj: openbox/window.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-window.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-window.Tpo" -c -o openbox/openbox_openbox-window.obj `if test -f 'openbox/window.c'; then $(CYGPATH_W) 'openbox/window.c'; else $(CYGPATH_W) '$(srcdir)/openbox/window.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-window.Tpo" "openbox/$(DEPDIR)/openbox_openbox-window.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-window.Tpo"; exit 1; fi
#	source='openbox/window.c' object='openbox/openbox_openbox-window.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-window.obj `if test -f 'openbox/window.c'; then $(CYGPATH_W) 'openbox/window.c'; else $(CYGPATH_W) '$(srcdir)/openbox/window.c'; fi`

openbox/openbox_openbox-xerror.o: openbox/xerror.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-xerror.o -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-xerror.Tpo" -c -o openbox/openbox_openbox-xerror.o `test -f 'openbox/xerror.c' || echo '$(srcdir)/'`openbox/xerror.c; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-xerror.Tpo" "openbox/$(DEPDIR)/openbox_openbox-xerror.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-xerror.Tpo"; exit 1; fi
#	source='openbox/xerror.c' object='openbox/openbox_openbox-xerror.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-xerror.o `test -f 'openbox/xerror.c' || echo '$(srcdir)/'`openbox/xerror.c

openbox/openbox_openbox-xerror.obj: openbox/xerror.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openbox/openbox_openbox-xerror.obj -MD -MP -MF "openbox/$(DEPDIR)/openbox_openbox-xerror.Tpo" -c -o openbox/openbox_openbox-xerror.obj `if test -f 'openbox/xerror.c'; then $(CYGPATH_W) 'openbox/xerror.c'; else $(CYGPATH_W) '$(srcdir)/openbox/xerror.c'; fi`; \
#	then mv -f "openbox/$(DEPDIR)/openbox_openbox-xerror.Tpo" "openbox/$(DEPDIR)/openbox_openbox-xerror.Po"; else rm -f "openbox/$(DEPDIR)/openbox_openbox-xerror.Tpo"; exit 1; fi
#	source='openbox/xerror.c' object='openbox/openbox_openbox-xerror.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openbox_openbox_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openbox/openbox_openbox-xerror.obj `if test -f 'openbox/xerror.c'; then $(CYGPATH_W) 'openbox/xerror.c'; else $(CYGPATH_W) '$(srcdir)/openbox/xerror.c'; fi`

render/render_rendertest-test.o: render/test.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_rendertest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT render/render_rendertest-test.o -MD -MP -MF "render/$(DEPDIR)/render_rendertest-test.Tpo" -c -o render/render_rendertest-test.o `test -f 'render/test.c' || echo '$(srcdir)/'`render/test.c; \
#	then mv -f "render/$(DEPDIR)/render_rendertest-test.Tpo" "render/$(DEPDIR)/render_rendertest-test.Po"; else rm -f "render/$(DEPDIR)/render_rendertest-test.Tpo"; exit 1; fi
#	source='render/test.c' object='render/render_rendertest-test.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_rendertest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o render/render_rendertest-test.o `test -f 'render/test.c' || echo '$(srcdir)/'`render/test.c

render/render_rendertest-test.obj: render/test.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_rendertest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT render/render_rendertest-test.obj -MD -MP -MF "render/$(DEPDIR)/render_rendertest-test.Tpo" -c -o render/render_rendertest-test.obj `if test -f 'render/test.c'; then $(CYGPATH_W) 'render/test.c'; else $(CYGPATH_W) '$(srcdir)/render/test.c'; fi`; \
#	then mv -f "render/$(DEPDIR)/render_rendertest-test.Tpo" "render/$(DEPDIR)/render_rendertest-test.Po"; else rm -f "render/$(DEPDIR)/render_rendertest-test.Tpo"; exit 1; fi
#	source='render/test.c' object='render/render_rendertest-test.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(render_rendertest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o render/render_rendertest-test.obj `if test -f 'render/test.c'; then $(CYGPATH_W) 'render/test.c'; else $(CYGPATH_W) '$(srcdir)/render/test.c'; fi`

tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.o: tools/gdm-control/gdm-control.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_gdm_control_gdm_control_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.o -MD -MP -MF "tools/gdm-control/$(DEPDIR)/tools_gdm_control_gdm_control-gdm-control.Tpo" -c -o tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.o `test -f 'tools/gdm-control/gdm-control.c' || echo '$(srcdir)/'`tools/gdm-control/gdm-control.c; \
#	then mv -f "tools/gdm-control/$(DEPDIR)/tools_gdm_control_gdm_control-gdm-control.Tpo" "tools/gdm-control/$(DEPDIR)/tools_gdm_control_gdm_control-gdm-control.Po"; else rm -f "tools/gdm-control/$(DEPDIR)/tools_gdm_control_gdm_control-gdm-control.Tpo"; exit 1; fi
#	source='tools/gdm-control/gdm-control.c' object='tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_gdm_control_gdm_control_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.o `test -f 'tools/gdm-control/gdm-control.c' || echo '$(srcdir)/'`tools/gdm-control/gdm-control.c

tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.obj: tools/gdm-control/gdm-control.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_gdm_control_gdm_control_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.obj -MD -MP -MF "tools/gdm-control/$(DEPDIR)/tools_gdm_control_gdm_control-gdm-control.Tpo" -c -o tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.obj `if test -f 'tools/gdm-control/gdm-control.c'; then $(CYGPATH_W) 'tools/gdm-control/gdm-control.c'; else $(CYGPATH_W) '$(srcdir)/tools/gdm-control/gdm-control.c'; fi`; \
#	then mv -f "tools/gdm-control/$(DEPDIR)/tools_gdm_control_gdm_control-gdm-control.Tpo" "tools/gdm-control/$(DEPDIR)/tools_gdm_control_gdm_control-gdm-control.Po"; else rm -f "tools/gdm-control/$(DEPDIR)/tools_gdm_control_gdm_control-gdm-control.Tpo"; exit 1; fi
#	source='tools/gdm-control/gdm-control.c' object='tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_gdm_control_gdm_control_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.obj `if test -f 'tools/gdm-control/gdm-control.c'; then $(CYGPATH_W) 'tools/gdm-control/gdm-control.c'; else $(CYGPATH_W) '$(srcdir)/tools/gdm-control/gdm-control.c'; fi`

tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.o: tools/gnome-panel-control/gnome-panel-control.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_gnome_panel_control_gnome_panel_control_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.o -MD -MP -MF "tools/gnome-panel-control/$(DEPDIR)/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.Tpo" -c -o tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.o `test -f 'tools/gnome-panel-control/gnome-panel-control.c' || echo '$(srcdir)/'`tools/gnome-panel-control/gnome-panel-control.c; \
#	then mv -f "tools/gnome-panel-control/$(DEPDIR)/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.Tpo" "tools/gnome-panel-control/$(DEPDIR)/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.Po"; else rm -f "tools/gnome-panel-control/$(DEPDIR)/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.Tpo"; exit 1; fi
#	source='tools/gnome-panel-control/gnome-panel-control.c' object='tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_gnome_panel_control_gnome_panel_control_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.o `test -f 'tools/gnome-panel-control/gnome-panel-control.c' || echo '$(srcdir)/'`tools/gnome-panel-control/gnome-panel-control.c

tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.obj: tools/gnome-panel-control/gnome-panel-control.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_gnome_panel_control_gnome_panel_control_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.obj -MD -MP -MF "tools/gnome-panel-control/$(DEPDIR)/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.Tpo" -c -o tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.obj `if test -f 'tools/gnome-panel-control/gnome-panel-control.c'; then $(CYGPATH_W) 'tools/gnome-panel-control/gnome-panel-control.c'; else $(CYGPATH_W) '$(srcdir)/tools/gnome-panel-control/gnome-panel-control.c'; fi`; \
#	then mv -f "tools/gnome-panel-control/$(DEPDIR)/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.Tpo" "tools/gnome-panel-control/$(DEPDIR)/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.Po"; else rm -f "tools/gnome-panel-control/$(DEPDIR)/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.Tpo"; exit 1; fi
#	source='tools/gnome-panel-control/gnome-panel-control.c' object='tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_gnome_panel_control_gnome_panel_control_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.obj `if test -f 'tools/gnome-panel-control/gnome-panel-control.c'; then $(CYGPATH_W) 'tools/gnome-panel-control/gnome-panel-control.c'; else $(CYGPATH_W) '$(srcdir)/tools/gnome-panel-control/gnome-panel-control.c'; fi`

tools/obxprop/tools_obxprop_obxprop-obxprop.o: tools/obxprop/obxprop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obxprop_obxprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/obxprop/tools_obxprop_obxprop-obxprop.o -MD -MP -MF "tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Tpo" -c -o tools/obxprop/tools_obxprop_obxprop-obxprop.o `test -f 'tools/obxprop/obxprop.c' || echo '$(srcdir)/'`tools/obxprop/obxprop.c; \
#	then mv -f "tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Tpo" "tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Po"; else rm -f "tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Tpo"; exit 1; fi
#	source='tools/obxprop/obxprop.c' object='tools/obxprop/tools_obxprop_obxprop-obxprop.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obxprop_obxprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/obxprop/tools_obxprop_obxprop-obxprop.o `test -f 'tools/obxprop/obxprop.c' || echo '$(srcdir)/'`tools/obxprop/obxprop.c

tools/obxprop/tools_obxprop_obxprop-obxprop.obj: tools/obxprop/obxprop.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obxprop_obxprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/obxprop/tools_obxprop_obxprop-obxprop.obj -MD -MP -MF "tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Tpo" -c -o tools/obxprop/tools_obxprop_obxprop-obxprop.obj `if test -f 'tools/obxprop/obxprop.c'; then $(CYGPATH_W) 'tools/obxprop/obxprop.c'; else $(CYGPATH_W) '$(srcdir)/tools/obxprop/obxprop.c'; fi`; \
#	then mv -f "tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Tpo" "tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Po"; else rm -f "tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Tpo"; exit 1; fi
#	source='tools/obxprop/obxprop.c' object='tools/obxprop/tools_obxprop_obxprop-obxprop.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obxprop_obxprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/obxprop/tools_obxprop_obxprop-obxprop.obj `if test -f 'tools/obxprop/obxprop.c'; then $(CYGPATH_W) 'tools/obxprop/obxprop.c'; else $(CYGPATH_W) '$(srcdir)/tools/obxprop/obxprop.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf parser/.libs parser/_libs
	-rm -rf render/.libs render/_libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-man1: $(man1_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(mkdir_p) "$(DESTDIR)$(man1dir)"
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	  $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst"; \
	done
uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f '$(DESTDIR)$(man1dir)/$$inst'"; \
	  rm -f "$(DESTDIR)$(man1dir)/$$inst"; \
	done
install-dist_appsDATA: $(dist_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(appsdir)" || $(mkdir_p) "$(DESTDIR)$(appsdir)"
	@list='$(dist_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(appsdir)/$$f'"; \
	  $(dist_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(appsdir)/$$f"; \
	done

uninstall-dist_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(appsdir)/$$f"; \
	done
install-dist_artwizboxed_themeDATA: $(dist_artwizboxed_theme_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(artwizboxed_themedir)" || $(mkdir_p) "$(DESTDIR)$(artwizboxed_themedir)"
	@list='$(dist_artwizboxed_theme_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_artwizboxed_themeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(artwizboxed_themedir)/$$f'"; \
	  $(dist_artwizboxed_themeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(artwizboxed_themedir)/$$f"; \
	done

uninstall-dist_artwizboxed_themeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_artwizboxed_theme_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(artwizboxed_themedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(artwizboxed_themedir)/$$f"; \
	done
install-dist_bear2_themeDATA: $(dist_bear2_theme_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(bear2_themedir)" || $(mkdir_p) "$(DESTDIR)$(bear2_themedir)"
	@list='$(dist_bear2_theme_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_bear2_themeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(bear2_themedir)/$$f'"; \
	  $(dist_bear2_themeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(bear2_themedir)/$$f"; \
	done

uninstall-dist_bear2_themeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bear2_theme_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(bear2_themedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bear2_themedir)/$$f"; \
	done
install-dist_clearlooks34_themeDATA: $(dist_clearlooks34_theme_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(clearlooks34_themedir)" || $(mkdir_p) "$(DESTDIR)$(clearlooks34_themedir)"
	@list='$(dist_clearlooks34_theme_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_clearlooks34_themeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(clearlooks34_themedir)/$$f'"; \
	  $(dist_clearlooks34_themeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(clearlooks34_themedir)/$$f"; \
	done

uninstall-dist_clearlooks34_themeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_clearlooks34_theme_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(clearlooks34_themedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(clearlooks34_themedir)/$$f"; \
	done
install-dist_clearlooks_themeDATA: $(dist_clearlooks_theme_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(clearlooks_themedir)" || $(mkdir_p) "$(DESTDIR)$(clearlooks_themedir)"
	@list='$(dist_clearlooks_theme_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_clearlooks_themeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(clearlooks_themedir)/$$f'"; \
	  $(dist_clearlooks_themeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(clearlooks_themedir)/$$f"; \
	done

uninstall-dist_clearlooks_themeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_clearlooks_theme_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(clearlooks_themedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(clearlooks_themedir)/$$f"; \
	done
install-dist_clearlooksolive_themeDATA: $(dist_clearlooksolive_theme_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(clearlooksolive_themedir)" || $(mkdir_p) "$(DESTDIR)$(clearlooksolive_themedir)"
	@list='$(dist_clearlooksolive_theme_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_clearlooksolive_themeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(clearlooksolive_themedir)/$$f'"; \
	  $(dist_clearlooksolive_themeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(clearlooksolive_themedir)/$$f"; \
	done

uninstall-dist_clearlooksolive_themeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_clearlooksolive_theme_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(clearlooksolive_themedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(clearlooksolive_themedir)/$$f"; \
	done
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(docdir)" || $(mkdir_p) "$(DESTDIR)$(docdir)"
	@list='$(dist_doc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_docDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(docdir)/$$f'"; \
	  $(dist_docDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(docdir)/$$f"; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(docdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(docdir)/$$f"; \
	done
install-dist_docxbmDATA: $(dist_docxbm_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(docxbmdir)" || $(mkdir_p) "$(DESTDIR)$(docxbmdir)"
	@list='$(dist_docxbm_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_docxbmDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(docxbmdir)/$$f'"; \
	  $(dist_docxbmDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(docxbmdir)/$$f"; \
	done

uninstall-dist_docxbmDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_docxbm_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(docxbmdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(docxbmdir)/$$f"; \
	done
install-dist_gnomewmfilesDATA: $(dist_gnomewmfiles_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gnomewmfilesdir)" || $(mkdir_p) "$(DESTDIR)$(gnomewmfilesdir)"
	@list='$(dist_gnomewmfiles_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_gnomewmfilesDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(gnomewmfilesdir)/$$f'"; \
	  $(dist_gnomewmfilesDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(gnomewmfilesdir)/$$f"; \
	done

uninstall-dist_gnomewmfilesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_gnomewmfiles_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(gnomewmfilesdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(gnomewmfilesdir)/$$f"; \
	done
install-dist_mikachu_themeDATA: $(dist_mikachu_theme_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(mikachu_themedir)" || $(mkdir_p) "$(DESTDIR)$(mikachu_themedir)"
	@list='$(dist_mikachu_theme_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_mikachu_themeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(mikachu_themedir)/$$f'"; \
	  $(dist_mikachu_themeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(mikachu_themedir)/$$f"; \
	done

uninstall-dist_mikachu_themeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_mikachu_theme_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(mikachu_themedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(mikachu_themedir)/$$f"; \
	done
install-dist_natura_themeDATA: $(dist_natura_theme_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(natura_themedir)" || $(mkdir_p) "$(DESTDIR)$(natura_themedir)"
	@list='$(dist_natura_theme_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_natura_themeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(natura_themedir)/$$f'"; \
	  $(dist_natura_themeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(natura_themedir)/$$f"; \
	done

uninstall-dist_natura_themeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_natura_theme_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(natura_themedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(natura_themedir)/$$f"; \
	done
install-dist_onyx_themeDATA: $(dist_onyx_theme_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(onyx_themedir)" || $(mkdir_p) "$(DESTDIR)$(onyx_themedir)"
	@list='$(dist_onyx_theme_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_onyx_themeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(onyx_themedir)/$$f'"; \
	  $(dist_onyx_themeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(onyx_themedir)/$$f"; \
	done

uninstall-dist_onyx_themeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_onyx_theme_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(onyx_themedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(onyx_themedir)/$$f"; \
	done
install-dist_onyxcitrus_themeDATA: $(dist_onyxcitrus_theme_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(onyxcitrus_themedir)" || $(mkdir_p) "$(DESTDIR)$(onyxcitrus_themedir)"
	@list='$(dist_onyxcitrus_theme_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_onyxcitrus_themeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(onyxcitrus_themedir)/$$f'"; \
	  $(dist_onyxcitrus_themeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(onyxcitrus_themedir)/$$f"; \
	done

uninstall-dist_onyxcitrus_themeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_onyxcitrus_theme_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(onyxcitrus_themedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(onyxcitrus_themedir)/$$f"; \
	done
install-dist_orang_themeDATA: $(dist_orang_theme_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(orang_themedir)" || $(mkdir_p) "$(DESTDIR)$(orang_themedir)"
	@list='$(dist_orang_theme_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_orang_themeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(orang_themedir)/$$f'"; \
	  $(dist_orang_themeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(orang_themedir)/$$f"; \
	done

uninstall-dist_orang_themeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_orang_theme_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(orang_themedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(orang_themedir)/$$f"; \
	done
install-dist_pixmapDATA: $(dist_pixmap_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pixmapdir)" || $(mkdir_p) "$(DESTDIR)$(pixmapdir)"
	@list='$(dist_pixmap_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_pixmapDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(pixmapdir)/$$f'"; \
	  $(dist_pixmapDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(pixmapdir)/$$f"; \
	done

uninstall-dist_pixmapDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pixmap_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pixmapdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pixmapdir)/$$f"; \
	done
install-dist_rcDATA: $(dist_rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(mkdir_p) "$(DESTDIR)$(rcdir)"
	@list='$(dist_rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(dist_rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-dist_rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-dist_syscrash_themeDATA: $(dist_syscrash_theme_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(syscrash_themedir)" || $(mkdir_p) "$(DESTDIR)$(syscrash_themedir)"
	@list='$(dist_syscrash_theme_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_syscrash_themeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(syscrash_themedir)/$$f'"; \
	  $(dist_syscrash_themeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(syscrash_themedir)/$$f"; \
	done

uninstall-dist_syscrash_themeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_syscrash_theme_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(syscrash_themedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(syscrash_themedir)/$$f"; \
	done
install-nodist_pkgconfigDATA: $(nodist_pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(mkdir_p) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(nodist_pkgconfig_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_pkgconfigDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  $(nodist_pkgconfigDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done

uninstall-nodist_pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkgconfig_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done
install-nodist_rcDATA: $(nodist_rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(mkdir_p) "$(DESTDIR)$(rcdir)"
	@list='$(nodist_rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(nodist_rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-nodist_rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-nodist_xsessionsDATA: $(nodist_xsessions_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xsessionsdir)" || $(mkdir_p) "$(DESTDIR)$(xsessionsdir)"
	@list='$(nodist_xsessions_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_xsessionsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xsessionsdir)/$$f'"; \
	  $(nodist_xsessionsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xsessionsdir)/$$f"; \
	done

uninstall-nodist_xsessionsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_xsessions_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xsessionsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xsessionsdir)/$$f"; \
	done
install-nodist_pubincludeHEADERS: $(nodist_pubinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pubincludedir)" || $(mkdir_p) "$(DESTDIR)$(pubincludedir)"
	@list='$(nodist_pubinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_pubincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pubincludedir)/$$f'"; \
	  $(nodist_pubincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pubincludedir)/$$f"; \
	done

uninstall-nodist_pubincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pubinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pubincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pubincludedir)/$$f"; \
	done
install-pubincludeHEADERS: $(pubinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pubincludedir)" || $(mkdir_p) "$(DESTDIR)$(pubincludedir)"
	@list='$(pubinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pubincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pubincludedir)/$$f'"; \
	  $(pubincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pubincludedir)/$$f"; \
	done

uninstall-pubincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pubinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pubincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pubincludedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkdir_p) $(distdir)/. $(distdir)/data $(distdir)/data/gnome-wm-properties $(distdir)/data/xbm $(distdir)/data/xsession $(distdir)/doc $(distdir)/m4 $(distdir)/parser $(distdir)/po $(distdir)/render $(distdir)/tests $(distdir)/themes/Artwiz-boxed/openbox-3 $(distdir)/themes/Bear2/openbox-3 $(distdir)/themes/Clearlooks-3.4/openbox-3 $(distdir)/themes/Clearlooks-Olive/openbox-3 $(distdir)/themes/Clearlooks/openbox-3 $(distdir)/themes/Mikachu/openbox-3 $(distdir)/themes/Natura/openbox-3 $(distdir)/themes/Onyx-Citrus/openbox-3 $(distdir)/themes/Onyx/openbox-3 $(distdir)/themes/Orang/openbox-3 $(distdir)/themes/Syscrash/openbox-3 $(distdir)/tools/themeupdate $(distdir)/tools/xdg-autostart
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(MANS) $(DATA) \
		$(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(secretbindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(appsdir)" "$(DESTDIR)$(artwizboxed_themedir)" "$(DESTDIR)$(bear2_themedir)" "$(DESTDIR)$(clearlooks34_themedir)" "$(DESTDIR)$(clearlooks_themedir)" "$(DESTDIR)$(clearlooksolive_themedir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(docxbmdir)" "$(DESTDIR)$(gnomewmfilesdir)" "$(DESTDIR)$(mikachu_themedir)" "$(DESTDIR)$(natura_themedir)" "$(DESTDIR)$(onyx_themedir)" "$(DESTDIR)$(onyxcitrus_themedir)" "$(DESTDIR)$(orang_themedir)" "$(DESTDIR)$(pixmapdir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(syscrash_themedir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(xsessionsdir)" "$(DESTDIR)$(pubincludedir)" "$(DESTDIR)$(pubincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-rm -f openbox/$(DEPDIR)/$(am__dirstamp)
	-rm -f openbox/$(am__dirstamp)
	-rm -f openbox/actions/$(DEPDIR)/$(am__dirstamp)
	-rm -f openbox/actions/$(am__dirstamp)
	-rm -f parser/$(DEPDIR)/$(am__dirstamp)
	-rm -f parser/$(am__dirstamp)
	-rm -f render/$(DEPDIR)/$(am__dirstamp)
	-rm -f render/$(am__dirstamp)
	-rm -f tools/gdm-control/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/gdm-control/$(am__dirstamp)
	-rm -f tools/gnome-panel-control/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/gnome-panel-control/$(am__dirstamp)
	-rm -f tools/obxprop/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/obxprop/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf openbox/$(DEPDIR) openbox/actions/$(DEPDIR) parser/$(DEPDIR) render/$(DEPDIR) tools/gdm-control/$(DEPDIR) tools/gnome-panel-control/$(DEPDIR) tools/obxprop/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-local distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-dist_appsDATA \
	install-dist_artwizboxed_themeDATA \
	install-dist_bear2_themeDATA \
	install-dist_clearlooks34_themeDATA \
	install-dist_clearlooks_themeDATA \
	install-dist_clearlooksolive_themeDATA install-dist_docDATA \
	install-dist_docxbmDATA install-dist_gnomewmfilesDATA \
	install-dist_mikachu_themeDATA install-dist_natura_themeDATA \
	install-dist_onyx_themeDATA install-dist_onyxcitrus_themeDATA \
	install-dist_orang_themeDATA install-dist_pixmapDATA \
	install-dist_rcDATA install-dist_secretbinSCRIPTS \
	install-dist_syscrash_themeDATA install-man \
	install-nodist_pkgconfigDATA install-nodist_pubincludeHEADERS \
	install-nodist_rcDATA install-nodist_xsessionsDATA \
	install-pubincludeHEADERS

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES \
	install-nodist_binSCRIPTS

install-info: install-info-recursive

install-man: install-man1

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf openbox/$(DEPDIR) openbox/actions/$(DEPDIR) parser/$(DEPDIR) render/$(DEPDIR) tools/gdm-control/$(DEPDIR) tools/gnome-panel-control/$(DEPDIR) tools/obxprop/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_appsDATA \
	uninstall-dist_artwizboxed_themeDATA \
	uninstall-dist_bear2_themeDATA \
	uninstall-dist_clearlooks34_themeDATA \
	uninstall-dist_clearlooks_themeDATA \
	uninstall-dist_clearlooksolive_themeDATA \
	uninstall-dist_docDATA uninstall-dist_docxbmDATA \
	uninstall-dist_gnomewmfilesDATA \
	uninstall-dist_mikachu_themeDATA \
	uninstall-dist_natura_themeDATA uninstall-dist_onyx_themeDATA \
	uninstall-dist_onyxcitrus_themeDATA \
	uninstall-dist_orang_themeDATA uninstall-dist_pixmapDATA \
	uninstall-dist_rcDATA uninstall-dist_secretbinSCRIPTS \
	uninstall-dist_syscrash_themeDATA uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-man \
	uninstall-nodist_binSCRIPTS uninstall-nodist_pkgconfigDATA \
	uninstall-nodist_pubincludeHEADERS uninstall-nodist_rcDATA \
	uninstall-nodist_xsessionsDATA uninstall-pubincludeHEADERS

uninstall-info: uninstall-info-recursive

uninstall-man: uninstall-man1

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am am--refresh check \
	check-am clean clean-binPROGRAMS clean-checkPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-recursive ctags ctags-recursive dist dist-all dist-bzip2 \
	dist-gzip dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-local distclean-recursive distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dist_appsDATA \
	install-dist_artwizboxed_themeDATA \
	install-dist_bear2_themeDATA \
	install-dist_clearlooks34_themeDATA \
	install-dist_clearlooks_themeDATA \
	install-dist_clearlooksolive_themeDATA install-dist_docDATA \
	install-dist_docxbmDATA install-dist_gnomewmfilesDATA \
	install-dist_mikachu_themeDATA install-dist_natura_themeDATA \
	install-dist_onyx_themeDATA install-dist_onyxcitrus_themeDATA \
	install-dist_orang_themeDATA install-dist_pixmapDATA \
	install-dist_rcDATA install-dist_secretbinSCRIPTS \
	install-dist_syscrash_themeDATA install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-man1 install-nodist_binSCRIPTS \
	install-nodist_pkgconfigDATA install-nodist_pubincludeHEADERS \
	install-nodist_rcDATA install-nodist_xsessionsDATA \
	install-pubincludeHEADERS install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_appsDATA \
	uninstall-dist_artwizboxed_themeDATA \
	uninstall-dist_bear2_themeDATA \
	uninstall-dist_clearlooks34_themeDATA \
	uninstall-dist_clearlooks_themeDATA \
	uninstall-dist_clearlooksolive_themeDATA \
	uninstall-dist_docDATA uninstall-dist_docxbmDATA \
	uninstall-dist_gnomewmfilesDATA \
	uninstall-dist_mikachu_themeDATA \
	uninstall-dist_natura_themeDATA uninstall-dist_onyx_themeDATA \
	uninstall-dist_onyxcitrus_themeDATA \
	uninstall-dist_orang_themeDATA uninstall-dist_pixmapDATA \
	uninstall-dist_rcDATA uninstall-dist_secretbinSCRIPTS \
	uninstall-dist_syscrash_themeDATA uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-man uninstall-man1 \
	uninstall-nodist_binSCRIPTS uninstall-nodist_pkgconfigDATA \
	uninstall-nodist_pubincludeHEADERS uninstall-nodist_rcDATA \
	uninstall-nodist_xsessionsDATA uninstall-pubincludeHEADERS


data/autostart.sh: $(srcdir)/data/autostart.sh.in Makefile
	@echo make: creating $@
	@$(edit) $< >$@

%.desktop: %.desktop.in Makefile
	@echo make: creating $@
	@$(edit) $< >$@	

%-session: %-session.in Makefile
	@echo make: creating $@
	@$(edit) $< >$@	

%.1.in: %.1.sgml
	@echo make: creating $@
	@docbook-to-man $< >$@

%.1: %.1.in Makefile
	@echo make: creating $@
	@$(edit) $< >$@	

#doc:
#       $(MAKE) -$(MAKEFLAGS) -C doc/doxygen doc

distclean-local:
	for d in . m4 po render; do \
		for p in core core.* gmon.out *\~ *.orig *.rej .\#*; do \
			rm -f "$$d/$$p"; \
		done \
	done

.PHONY: doc
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
